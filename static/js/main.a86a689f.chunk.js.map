{"version":3,"sources":["state/reducers/countryReducer.js","state/reducers/index.js","state/actions/countryActions.js","utils/constants.js","components/DataTable.jsx","utils/covidCalculations.js","components/ChartLine.js","components/ChartBar.js","utils/countryList.js","pages/HomePage/App.js","pages/Routes.js","serviceWorker.js","index.js"],"names":["initialCountryState","value","label","combineReducers","country","state","action","type","getMovingAverageDayInterval","mode","dayInterval","getYAxisName","yAxisName","getCountryColor","index","color","DataTable","fillData","data","filledData","columns","key","name","rows","map","entry","push","date","this","props","DataGrid","Component","connect","getData","countryData","dayValueOfMovingAverage","startDate","endDate","xyData","dataMaxX","dataMaxY","countryDataArray","Object","entries","dailyData","moment","isBetween","totalCases","slice","newDailyData","movingAverage","format","average","Math","floor","totalPercentage","dailydeathchange","dayNumber","totalcase","ChartLine","initializeSimilarCountries","similarCountries","countryInfo","currentCountry","i","splice","setState","handleClickCountry","e","selectedCountry","currentTarget","dataset","window","getComputedStyle","backgroundColor","style","handleClickOutsideDayButton","dayDropdown","document","getElementById","dayButton","contains","target","isDayIntervalDropdownHidden","handleDayIntervalDropdown","prevState","handleDataTable","isDataTableHidden","changeDayInterval","dayinterval","handleStartDateChange","handleEndDateChange","subtract","addEventListener","removeEventListener","prevProps","isCalendarPresent","isDayIntervalPresent","dataMin","add","dayIntervalArea","id","className","onClick","icon","faChevronDown","display","Array","x","data-dayinterval","dataTableArea","datePickerArea","dateFormat","selected","Date","maxDate","onChange","minDate","similarCountriesArea","data-color","width","height","margin","top","right","left","bottom","stroke","strokeDasharray","dataKey","interval","tick","angle","domain","dataMax","ceil","trunc","isAnimationActive","dot","isFront","r","peakData","y","fill","offset","position","ChartBar","COUNTRIES","actionCreators","setCountry","App","getCountryData","a","datadownloading","fetch","res","ok","text","resCountryDataResponse","resCountryDataText","split","resCountryDataJSON","JSON","parse","length","timelineItems","timelineitems","stat","handleChangeCountry","countrySelect","options","selectedIndex","getSimilarCountries","totalCasesOfSelectedCountry","resTotal","countryDataTotal","resCountryDataTotalResponse","resCountryDataTotalText","resCountryDataTotalJSON","countrydata","total_cases","resTotals","resCountryDataTotalsResponse","resCountryDataTotalsText","resCountryDataTotalsJSON","countryItems","countryitems","countryDataTotalsArray","indexOfMaxDifference","maxDifference","currentSimilarCountry","k","difference","abs","chartsArea","hidden","Country","Routes","exact","path","component","Boolean","location","hostname","match","store","createStore","reducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a86a689f.chunk.js","sourcesContent":["import {\n  SET_COUNTRY\n} from '../actions/countryActions'\n\nconst initialCountryState = {\n\tvalue: \"\",\n  label: \"\"\n}\n\nexport default function reducer (state = initialCountryState, action){\n\tswitch(action.type){\n\t\tcase SET_COUNTRY: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.country.value,\n        label: action.country.label\n\t\t\t}\n\t\t}\n\t\tdefault:\n      return state\n\t}\n}\n","import { combineReducers } from 'redux'\n\nimport country from './countryReducer'\n\nexport default combineReducers({\n\tcountry\n})\n","export const SET_COUNTRY = 'SET_COUNTRY'\n\nexport function setCountry(country){\n\treturn { type: SET_COUNTRY, country }\n}\n","export const API_DIRECTORY_COUNTRY_TIMELINE = 'https://api.thevirustracker.com/free-api?countryTimeline='\nexport const API_DIRECTORY_COUNTRY_TOTALS = 'https://api.thevirustracker.com/free-api?countryTotals=ALL'\nexport const API_DIRECTORY_COUNTRY_TOTAL = 'https://api.thevirustracker.com/free-api?countryTotal='\n\nexport const getMovingAverageDayInterval = (mode) => {\n  let dayInterval\n  switch (mode) {\n      case 'DAILY_CASE':\n          dayInterval = 7\n          break\n      case 'MORTALITY_RATE_PERCENTAGE':\n          dayInterval = 3\n          break\n      default:\n          dayInterval = 1\n  }\n  return dayInterval\n}\n\nexport const getYAxisName = (mode) => {\n  let yAxisName\n  switch (mode) {\n      case 'DAILY_CASE':\n          yAxisName = 'average'\n          break\n      case 'MORTALITY_RATE_PERCENTAGE':\n          yAxisName = 'average'\n          break\n      case 'DAILY_DEATH_CHANGE':\n          yAxisName = 'dailydeathchange'\n          break\n      case 'TOTAL_CASE_SINCE_100':\n          yAxisName = 'totalcase'\n          break\n      default:\n          yAxisName = 'y'\n  }\n  return yAxisName\n}\n\nexport const getCountryColor = (index) => {\n  let color\n  switch (index) {\n      case 0:\n          color = '#EA526F'\n          break\n      case 1:\n          color = '#D7AF70'\n          break\n      case 2:\n          color = '#937D64'\n          break\n      case 3:\n          color = '#585B56'\n          break\n      case 4:\n          color = '#E76B74'\n          break\n      case 5:\n          color = '#D1D1D1'\n          break\n      case 6:\n          color = '#85C7F2'\n          break\n      case 7:\n          color = '#636363'\n          break\n      case 8:\n          color = '#D4F2DB'\n          break\n      case 9:\n          color = '#914D76'\n          break\n      default:\n          color = '#69353F'\n  }\n  return color\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport DataGrid from 'react-data-grid'\nimport 'react-data-grid/dist/react-data-grid.css';\n\nimport { getYAxisName } from '../utils/constants'\nimport './DataTable.css'\n\nconst mapStateToProps = state => {\n  return {\n    country: state.country\n  }\n}\n\nclass DataTable extends Component {\n\n  fillData = (country, data, mode) => {\n    let filledData = {}\n    let columns = [{ key: 'country', name: 'Country' }]\n    let rows = [{ country: country.label }]\n    data.map((entry, index) => {\n      columns.push({ key: data[index].date, name: data[index].date })\n      rows[0][data[index].date] = data[index][getYAxisName(mode)]\n    })\n    filledData[\"columns\"] = columns\n    filledData[\"rows\"] = rows\n    return filledData\n  }\n\n  render() {\n    const { country, mode, data } = this.props\n    const filledData = this.fillData(country, data, mode)\n\n    return (\n      <DataGrid\n        columns={filledData.columns}\n        rows={filledData.rows}\n      />\n    )\n  }\n}\n\nexport default connect(mapStateToProps)(DataTable)\n","import moment from 'moment'\n\nexport const getData = (mode, countryData, dayValueOfMovingAverage, startDate, endDate) => {\n  let data = {}\n  let xyData = []\n  let dataMaxX = ''\n  let dataMaxY = 0\n  const countryDataArray = Object.entries(countryData)\n\n  if(mode === 'DAILY_CASE'){\n    countryDataArray.map((dailyData, index) => {\n\n      // Calculate only selected interval\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let totalCases = 0\n        let newCountryDataArray = []\n\n        // Get relevant array for calculation according to day interval for moving average. If no data available then start from the first available day.\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n        }\n        else{\n          newCountryDataArray = countryDataArray.slice(0, index)\n        }\n\n        // Total daily cases in selected interval\n        newCountryDataArray.map(newDailyData => {\n          totalCases += newDailyData[1][\"new_daily_cases\"]\n        })\n\n        // Finding and setting the moving average\n        let movingAverage = totalCases / dayValueOfMovingAverage\n        xyData.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), average: Math.floor(movingAverage  * 100) / 100 })\n\n        // Finding and setting the peak point(s)\n        if(movingAverage > dataMaxY){\n          dataMaxX = moment(dailyData[0]).format(\"DD/M/YY\")\n          dataMaxY = movingAverage\n        }\n      }\n    })\n  }\n  else if(mode === 'MORTALITY_RATE_PERCENTAGE'){\n    countryDataArray.map((dailyData, index) => {\n\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let totalPercentage = 0\n        let newCountryDataArray = []\n\n        // Get relevant array for calculation according to day interval for moving average. If no data available then start from the first available day.\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n        }\n        else{\n          newCountryDataArray = countryDataArray.slice(0, index)\n        }\n\n        // Total death percentage(total deaths / total cases) in selected interval\n        newCountryDataArray.map(newDailyData => {\n          totalPercentage += newDailyData[1][\"total_deaths\"] / newDailyData[1][\"total_cases\"]\n        })\n\n        // Finding and setting the moving average\n        let movingAverage = totalPercentage / dayValueOfMovingAverage\n        xyData.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), average: Math.floor(movingAverage  * 10000) / 10000 })\n\n        // Finding and setting the peak point(s)\n        if(movingAverage > dataMaxY){\n          dataMaxX = moment(dailyData[0]).format(\"DD/M/YY\")\n          dataMaxY = movingAverage\n        }\n      }\n    })\n  }\n  else if(mode === 'DAILY_DEATH_CHANGE'){\n    countryDataArray.map((dailyData, index) => {\n\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let dailydeathchange = 0\n\n        // Get relevant array for calculation\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          dailydeathchange = countryDataArray[index][1][\"new_daily_deaths\"] - countryDataArray[index-dayValueOfMovingAverage][1][\"new_daily_deaths\"]\n        }\n\n        // Finding and setting the daily death change\n        xyData.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), dailydeathchange: dailydeathchange })\n      }\n    })\n  }\n  else if(mode === 'TOTAL_CASE_SINCE_100'){\n    let dayNumber = 0\n    countryDataArray.map((dailyData, index) => {\n      if(dailyData[1][\"total_cases\"] > 100){\n        dayNumber++\n        xyData.push({ date: \"Day \" + dayNumber, totalcase: dailyData[1][\"total_cases\"] })\n      }\n    })\n  }\n\n  data[\"peakData\"] = { dataMaxX: dataMaxX, dataMaxY: dataMaxY }\n  data[\"xyData\"] = xyData\n  return data\n}\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, Label, ReferenceDot } from 'recharts'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\n\nimport DataTable from '../components/DataTable'\nimport { getYAxisName, getMovingAverageDayInterval, getCountryColor } from '../utils/constants'\nimport { getData } from '../utils/covidCalculations'\nimport './ChartLine.css'\n\nclass ChartLine extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dayValueOfMovingAverage: getMovingAverageDayInterval(this.props.mode),\n      startDate: moment().subtract(60, \"days\").format(\"M/DD/YY\"),\n      endDate: moment().format(\"M/DD/YY\"),\n      isDayIntervalDropdownHidden: true,\n      isDataTableHidden: true\n    }\n  }\n\n  componentDidMount(){\n    document.addEventListener('click', this.handleClickOutsideDayButton, true)\n    document.addEventListener('touchstart', this.handleClickOutsideDayButton, true)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutsideDayButton, true)\n    document.removeEventListener('touchstart', this.handleClickOutsideDayButton, true)\n  }\n\n  componentDidUpdate(prevProps){\n    const { similarCountries } = this.props\n    if(similarCountries !== prevProps.similarCountries){\n      this.initializeSimilarCountries(similarCountries)\n    }\n  }\n\n  initializeSimilarCountries = (similarCountries) => {\n    const { countryInfo } = this.props\n    if(null != similarCountries){\n      similarCountries.map((currentCountry, i) => {\n        if(currentCountry[1][\"code\"] === countryInfo.value){\n          similarCountries.splice(i, 1)\n        }\n        similarCountries[i][1][\"color\"] = getCountryColor(i)\n      })\n      this.setState({ similarCountries: similarCountries })\n    }\n  }\n\n  handleClickCountry = (e) => {\n    const selectedCountry = e.currentTarget\n    const color = selectedCountry.dataset.color\n    const backgroundColor = window.getComputedStyle(selectedCountry).backgroundColor\n    if(backgroundColor === \"rgb(255, 255, 255)\"){\n      selectedCountry.style.backgroundColor = color\n      selectedCountry.style.color = 'white'\n    }\n    else{\n      selectedCountry.style.backgroundColor = '#FFF'\n      selectedCountry.style.color = '#292929'\n    }\n    //TODO graph çizilecek\n  }\n\n  handleClickOutsideDayButton = (e) => {\n    // Toggle day dropdown down when clicked outside\n    const dayDropdown = document.getElementById(\"linechart-daydropdown\")\n    const dayButton = document.getElementById(\"linechart-daybutton\")\n    if (null !== dayDropdown && !dayDropdown.contains(e.target) && null !== dayButton && !dayButton.contains(e.target)) {\n      this.setState({ isDayIntervalDropdownHidden: true })\n    }\n  }\n\n  handleDayIntervalDropdown = () => {\n    // Toggle day dropdown according to previous state\n    this.setState(prevState => ({\n      ...prevState,\n      isDayIntervalDropdownHidden: !prevState.isDayIntervalDropdownHidden\n    }))\n  }\n\n  handleDataTable = () => {\n    // Toggle datatable according to previous state\n    this.setState(prevState => ({\n      ...prevState,\n      isDataTableHidden: !prevState.isDataTableHidden\n    }))\n  }\n\n  changeDayInterval = (e) => {\n    const selectedDay = e.currentTarget\n    const dayinterval = selectedDay.dataset.dayinterval\n    this.setState({ dayValueOfMovingAverage: dayinterval, isDayIntervalDropdownHidden: true })\n  }\n\n  handleStartDateChange = (date) => {\n    this.setState({ startDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  handleEndDateChange = (date) => {\n    this.setState({ endDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  render() {\n    const { mode, countryInfo, countryData, isCalendarPresent, isDayIntervalPresent, dataMin } = this.props\n    if(null == countryData){ return null }\n    const { dayValueOfMovingAverage, startDate, endDate, isDataTableHidden, similarCountries } = this.state\n    let name\n    switch (mode) {\n        case 'DAILY_CASE':\n            name = 'moving average of daily cases'\n            break\n        case 'MORTALITY_RATE_PERCENTAGE':\n            name = 'moving average of mortality rate'\n            break\n        case 'TOTAL_CASE_SINCE_100':\n            name = 'Total cases since 100th case'\n            break\n        default:\n            name = ''\n    }\n\n    //Getting data from props according to calculations\n    const data = getData(mode, countryData, dayValueOfMovingAverage, moment(startDate).subtract(1, \"days\").format(\"M/DD/YY\"), moment(endDate).add(1, \"days\").format(\"M/DD/YY\"))\n\n    const dayIntervalArea =\n    isDayIntervalPresent\n    ?\n    <>\n    <div id=\"linechart-daybutton\" className=\"linechart-daybutton\" onClick={this.handleDayIntervalDropdown}>\n      <div className=\"linechart-daybutton-wrapper\">\n      <span className=\"linechart-dayvalue-wrapper\">{dayValueOfMovingAverage}-day</span>\n      <span className=\"linechart-dayicon-wrapper\"><FontAwesomeIcon icon={faChevronDown} color=\"#96ADC8\"/></span>\n      </div>\n    </div>\n    <div id=\"linechart-daydropdown\" className=\"linechart-daydropdown\" style={{display: this.state.isDayIntervalDropdownHidden ? 'none' : 'inline-block'}}>\n      {\n        [...Array(16)].map((x, i) => {\n          if(i > 1){\n            return <div className=\"linechart-dayselect\" data-dayinterval={i} key={i+\"day\"} onClick={this.changeDayInterval}>\n              {i}-day\n            </div>\n          }\n        })\n      }\n    </div>\n    </>\n    :\n    null\n\n    const dataTableArea =\n    isDataTableHidden\n    ?\n    null\n    :\n    <DataTable data={data.xyData} mode={mode} />\n\n    const datePickerArea =\n    isCalendarPresent\n    ?\n    <div className=\"linechart-dates-container\">\n      <div className=\"linechart-date-container linechart-startdate-container\">\n      <span className=\"linechart-date-label\">Start date</span>\n      <DatePicker\n        className=\"linechart-startdatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(startDate)}\n        maxDate={new Date(endDate)}\n        onChange={this.handleStartDateChange}\n      />\n      </div>\n      <div className=\"linechart-date-container linechart-enddate-container\">\n      <span className=\"linechart-date-label\">End date</span>\n      <DatePicker\n        className=\"linechart-enddatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(endDate)}\n        minDate={new Date(startDate)}\n        maxDate={new Date()}\n        onChange={this.handleEndDateChange}\n      />\n      </div>\n    </div>\n    :\n    null\n\n    const similarCountriesArea =\n    similarCountries\n    ?\n    similarCountries.map((currentCountry, i) => {\n      return <div key={\"linechart-similarcountry-button\"+i+name} className=\"linechart-similarcountry-button\" data-color={currentCountry[1][\"color\"]} onClick={this.handleClickCountry}>\n        <div className=\"linechart-similarcountry-button-text\">\n        {currentCountry[1][\"title\"]}\n        </div>\n      </div>\n    })\n    :\n    null\n\n    return (\n      <>\n      <div className=\"linechart-container\">\n        <div className=\"linechart-graph-container\">\n          <div className=\"linechart-name-container\">\n            {dayIntervalArea}\n            <span className=\"linechart-name\">{name}</span>\n          </div>\n          <div className=\"linechart-wrapper\">\n            <ResponsiveContainer width=\"100%\" height={350} display=\"inline-block\">\n              <LineChart data={data.xyData} margin={{ top: 5, right: 5, left: 0, bottom: 5 }}>\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" interval=\"preserveEnd\" tick={{ angle: -10 }} />\n                <YAxis type=\"number\" interval=\"preserveStartEnd\" domain={[dataMin, dataMax => dataMax * 1.2 < 10 ? Math.floor(dataMax * 1.2  * 100) / 100 : Math.ceil(Math.trunc(dataMax * 1.2)/100)*100]} />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey={getYAxisName(mode)} stroke=\"#70161E\" isAnimationActive={false} dot={false} />\n                <ReferenceDot isFront={true} r={5} x={data.peakData.dataMaxX} y={data.peakData.dataMaxY} fill=\"#70161E\" stroke=\"none\">\n                  <Label value=\"Peak\" offset={0} position=\"top\" />\n                </ReferenceDot>\n              </LineChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n        <div className=\"linechart-configurations-container\">\n          {datePickerArea}\n          <div className=\"linechart-datatable-container\">\n            <div className=\"linechart-datatablebutton\" onClick={this.handleDataTable}>\n              <div className=\"linechart-datatablevalue\">{isDataTableHidden ? \"Show\" : \"Hide\"} datatable</div>\n            </div>\n            {dataTableArea}\n          </div>\n          <div className=\"linechart-similarcountry-area\">\n            <div className=\"linechart-similarcountry-button linechart-similarcountry-button-currentcountry\">\n              <div className=\"linechart-similarcountry-button-text\">\n              {countryInfo.label}\n              </div>\n            </div>\n            <div className=\"linechart-similarcountry-area-text\">\n            Similar countries (in terms of total cases)\n            </div>\n            {similarCountriesArea}\n          </div>\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ChartLine\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { BarChart, Bar, Cell, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts'\nimport DatePicker from \"react-datepicker\"\n\nimport DataTable from '../components/DataTable'\nimport { getYAxisName, getMovingAverageDayInterval, getCountryColor } from '../utils/constants'\nimport { getData } from '../utils/covidCalculations'\nimport './ChartBar.css'\n\nclass ChartBar extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dayValueOfMovingAverage: getMovingAverageDayInterval(this.props.mode),\n      startDate: moment().subtract(60, \"days\").format(\"M/DD/YY\"),\n      endDate: moment().format(\"M/DD/YY\"),\n      isDataTableHidden: true\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    const { similarCountries } = this.props\n    if(similarCountries !== prevProps.similarCountries){\n      this.initializeSimilarCountries(similarCountries)\n    }\n  }\n\n  initializeSimilarCountries = (similarCountries) => {\n    const { countryInfo } = this.props\n    if(null != similarCountries){\n      similarCountries.map((currentCountry, i) => {\n        if(currentCountry[1][\"code\"] === countryInfo.value){\n          similarCountries.splice(i, 1)\n        }\n        similarCountries[i][1][\"color\"] = getCountryColor(i)\n      })\n      this.setState({ similarCountries: similarCountries })\n    }\n  }\n\n  handleClickCountry = (e) => {\n    const selectedCountry = e.currentTarget\n    const color = selectedCountry.dataset.color\n    const backgroundColor = window.getComputedStyle(selectedCountry).backgroundColor\n    if(backgroundColor === \"rgb(255, 255, 255)\"){\n      selectedCountry.style.backgroundColor = color\n      selectedCountry.style.color = 'white'\n    }\n    else{\n      selectedCountry.style.backgroundColor = '#FFF'\n      selectedCountry.style.color = '#292929'\n    }\n    //TODO graph çizilecek\n  }\n\n  handleDataTable = () => {\n    // Toggle datatable according to previous state\n    this.setState(prevState => ({\n      ...prevState,\n      isDataTableHidden: !prevState.isDataTableHidden\n    }))\n  }\n\n  handleStartDateChange = (date) => {\n    this.setState({ startDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  handleEndDateChange = (date) => {\n    this.setState({ endDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  render() {\n    const { mode, countryInfo, countryData, isCalendarPresent, isDayIntervalPresent, dataMin } = this.props\n    if(null == countryData){\n      return null\n    }\n    const { dayValueOfMovingAverage, startDate, endDate, isDataTableHidden, similarCountries } = this.state\n    let name\n    switch (mode) {\n        case 'DAILY_DEATH_CHANGE':\n            name = 'Daily new deaths changed from the previous day’s death count'\n            break\n        default:\n            name = ''\n    }\n\n    //Getting data from props according to calculations\n    const data = getData(mode, countryData, dayValueOfMovingAverage, moment(startDate).subtract(1, \"days\").format(\"M/DD/YY\"), moment(endDate).add(1, \"days\").format(\"M/DD/YY\"))\n\n    const datePickerArea =\n    isCalendarPresent\n    ?\n    <div className=\"barchart-dates-container\">\n      <div className=\"barchart-date-container barchart-startdate\">\n      <span className=\"barchart-date-label\">Start date</span>\n      <DatePicker\n        className=\"barchart-startdatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(startDate)}\n        maxDate={new Date(endDate)}\n        onChange={this.handleStartDateChange}\n      />\n      </div>\n      <div className=\"barchart-date-container barchart-enddate\">\n      <span className=\"barchart-date-label\">End date</span>\n      <DatePicker\n        className=\"barchart-enddatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(endDate)}\n        minDate={new Date(startDate)}\n        maxDate={new Date()}\n        onChange={this.handleEndDateChange}\n      />\n      </div>\n    </div>\n    :\n    null\n\n    const dataTableArea =\n    isDataTableHidden\n    ?\n    null\n    :\n    <DataTable data={data.xyData} mode={mode} />\n\n    const similarCountriesArea =\n    similarCountries\n    ?\n    similarCountries.map((currentCountry, i) => {\n      return <div className=\"barchart-similarcountry-button\" key={\"barchart-similarcountry-button\"+i+name} data-color={currentCountry[1][\"color\"]} onClick={this.handleClickCountry}>\n      <div className=\"barchart-similarcountry-button-text\">\n      {currentCountry[1][\"title\"]}\n      </div>\n      </div>\n    })\n    :\n    null\n\n    return (\n      <>\n      <div className=\"barchart-container\">\n        <div className=\"barchart-graph-container\">\n          <div className=\"barchart-name\">\n            {name}\n          </div>\n          <div className=\"barchart-wrapper\">\n            <ResponsiveContainer width=\"100%\" height={350} display=\"inline-block\">\n            <BarChart data={data.xyData} margin={{ top: 5, right: 5, left: 0, bottom: 5 }}>\n              <Bar dataKey={getYAxisName(mode)} fill=\"#8884d8\" >\n              {\n                 data.xyData.map((entry, index) => (\n                   <Cell key={`cell-${index}`} fill={entry.dailydeathchange > 0 ? \"#D62728\" : \"#2E8B57\"}/>\n                 ))\n               }\n              </Bar>\n              <XAxis dataKey=\"date\" interval=\"preserveEnd\" tick={{ angle: -10 }} />\n              <YAxis type=\"number\" domain={[dataMin, dataMax => dataMax < 100 ? Math.floor(dataMax  * 100) / 100 : Math.ceil(Math.trunc(dataMax)/100)*100]}  >\n              </YAxis>\n              <ReferenceLine y={0} stroke=\"#000\" />\n              <Tooltip />\n            </BarChart>\n            </ResponsiveContainer>\n          </div>\n        </div>\n        <div className=\"barchart-configurations-container\">\n          {datePickerArea}\n          <div className=\"barchart-datatable-container\">\n            <div className=\"barchart-datatablebutton\" onClick={this.handleDataTable}>\n              <div className=\"barchart-datatablevalue\">{isDataTableHidden ? \"Show\" : \"Hide\"} datatable</div>\n            </div>\n            {dataTableArea}\n          </div>\n          <div className=\"barchart-similarcountry-area\">\n            <div className=\"barchart-similarcountry-button linechart-similarcountry-button-currentcountry\">\n              <div className=\"barchart-similarcountry-button-text\">\n              {countryInfo.label}\n              </div>\n            </div>\n            <div className=\"barchart-similarcountry-area-text\">\n            Similar countries (in terms of total cases)\n            </div>\n            {similarCountriesArea}\n          </div>\n        </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default ChartBar\n","export const COUNTRIES = [\n  {\n    \"value\": \"AF\",\n    \"label\": \"Afghanistan\"\n  },\n  {\n    \"value\": \"AL\",\n    \"label\": \"Albania\"\n  },\n  {\n    \"value\": \"DZ\",\n    \"label\": \"Algeria\"\n  },\n  {\n    \"value\": \"AS\",\n    \"label\": \"American Samoa\"\n  },\n  {\n    \"value\": \"AD\",\n    \"label\": \"Andorra\"\n  },\n  {\n    \"value\": \"AO\",\n    \"label\": \"Angola\"\n  },\n  {\n    \"value\": \"AI\",\n    \"label\": \"Anguilla\"\n  },\n  {\n    \"value\": \"AQ\",\n    \"label\": \"Antarctica\"\n  },\n  {\n    \"value\": \"AG\",\n    \"label\": \"Antigua and Barbuda\"\n  },\n  {\n    \"value\": \"AR\",\n    \"label\": \"Argentina\"\n  },\n  {\n    \"value\": \"AM\",\n    \"label\": \"Armenia\"\n  },\n  {\n    \"value\": \"AW\",\n    \"label\": \"Aruba\"\n  },\n  {\n    \"value\": \"AU\",\n    \"label\": \"Australia\"\n  },\n  {\n    \"value\": \"AT\",\n    \"label\": \"Austria\"\n  },\n  {\n    \"value\": \"AZ\",\n    \"label\": \"Azerbaijan\"\n  },\n  {\n    \"value\": \"BS\",\n    \"label\": \"Bahamas\"\n  },\n  {\n    \"value\": \"BH\",\n    \"label\": \"Bahrain\"\n  },\n  {\n    \"value\": \"BD\",\n    \"label\": \"Bangladesh\"\n  },\n  {\n    \"value\": \"BB\",\n    \"label\": \"Barbados\"\n  },\n  {\n    \"value\": \"BY\",\n    \"label\": \"Belarus\"\n  },\n  {\n    \"value\": \"BE\",\n    \"label\": \"Belgium\"\n  },\n  {\n    \"value\": \"BZ\",\n    \"label\": \"Belize\"\n  },\n  {\n    \"value\": \"BJ\",\n    \"label\": \"Benin\"\n  },\n  {\n    \"value\": \"BM\",\n    \"label\": \"Bermuda\"\n  },\n  {\n    \"value\": \"BT\",\n    \"label\": \"Bhutan\"\n  },\n  {\n    \"value\": \"BO\",\n    \"label\": \"Bolivia, Plurinational State of\"\n  },\n  {\n    \"value\": \"BQ\",\n    \"label\": \"Bonaire, Sint Eustatius and Saba\"\n  },\n  {\n    \"value\": \"BA\",\n    \"label\": \"Bosnia and Herzegovina\"\n  },\n  {\n    \"value\": \"BW\",\n    \"label\": \"Botswana\"\n  },\n  {\n    \"value\": \"BV\",\n    \"label\": \"Bouvet Island\"\n  },\n  {\n    \"value\": \"BR\",\n    \"label\": \"Brazil\"\n  },\n  {\n    \"value\": \"IO\",\n    \"label\": \"British Indian Ocean Territory\"\n  },\n  {\n    \"value\": \"BN\",\n    \"label\": \"Brunei Darussalam\"\n  },\n  {\n    \"value\": \"BG\",\n    \"label\": \"Bulgaria\"\n  },\n  {\n    \"value\": \"BF\",\n    \"label\": \"Burkina Faso\"\n  },\n  {\n    \"value\": \"BI\",\n    \"label\": \"Burundi\"\n  },\n  {\n    \"value\": \"KH\",\n    \"label\": \"Cambodia\"\n  },\n  {\n    \"value\": \"CM\",\n    \"label\": \"Cameroon\"\n  },\n  {\n    \"value\": \"CA\",\n    \"label\": \"Canada\"\n  },\n  {\n    \"value\": \"CV\",\n    \"label\": \"Cape Verde\"\n  },\n  {\n    \"value\": \"KY\",\n    \"label\": \"Cayman Islands\"\n  },\n  {\n    \"value\": \"CF\",\n    \"label\": \"Central African Republic\"\n  },\n  {\n    \"value\": \"TD\",\n    \"label\": \"Chad\"\n  },\n  {\n    \"value\": \"CL\",\n    \"label\": \"Chile\"\n  },\n  {\n    \"value\": \"CN\",\n    \"label\": \"China\"\n  },\n  {\n    \"value\": \"CX\",\n    \"label\": \"Christmas Island\"\n  },\n  {\n    \"value\": \"CC\",\n    \"label\": \"Cocos (Keeling) Islands\"\n  },\n  {\n    \"value\": \"CO\",\n    \"label\": \"Colombia\"\n  },\n  {\n    \"value\": \"KM\",\n    \"label\": \"Comoros\"\n  },\n  {\n    \"value\": \"CG\",\n    \"label\": \"Congo\"\n  },\n  {\n    \"value\": \"CD\",\n    \"label\": \"Congo, the Democratic Republic of the\"\n  },\n  {\n    \"value\": \"CK\",\n    \"label\": \"Cook Islands\"\n  },\n  {\n    \"value\": \"CR\",\n    \"label\": \"Costa Rica\"\n  },\n  {\n    \"value\": \"CI\",\n    \"label\": \"Côte d'Ivoire\"\n  },\n  {\n    \"value\": \"HR\",\n    \"label\": \"Croatia\"\n  },\n  {\n    \"value\": \"CU\",\n    \"label\": \"Cuba\"\n  },\n  {\n    \"value\": \"CW\",\n    \"label\": \"Curaçao\"\n  },\n  {\n    \"value\": \"CY\",\n    \"label\": \"Cyprus\"\n  },\n  {\n    \"value\": \"CZ\",\n    \"label\": \"Czech Republic\"\n  },\n  {\n    \"value\": \"DK\",\n    \"label\": \"Denmark\"\n  },\n  {\n    \"value\": \"DJ\",\n    \"label\": \"Djibouti\"\n  },\n  {\n    \"value\": \"DM\",\n    \"label\": \"Dominica\"\n  },\n  {\n    \"value\": \"DO\",\n    \"label\": \"Dominican Republic\"\n  },\n  {\n    \"value\": \"EC\",\n    \"label\": \"Ecuador\"\n  },\n  {\n    \"value\": \"EG\",\n    \"label\": \"Egypt\"\n  },\n  {\n    \"value\": \"SV\",\n    \"label\": \"El Salvador\"\n  },\n  {\n    \"value\": \"GQ\",\n    \"label\": \"Equatorial Guinea\"\n  },\n  {\n    \"value\": \"ER\",\n    \"label\": \"Eritrea\"\n  },\n  {\n    \"value\": \"EE\",\n    \"label\": \"Estonia\"\n  },\n  {\n    \"value\": \"ET\",\n    \"label\": \"Ethiopia\"\n  },\n  {\n    \"value\": \"FK\",\n    \"label\": \"Falkland Islands (Malvinas)\"\n  },\n  {\n    \"value\": \"FO\",\n    \"label\": \"Faroe Islands\"\n  },\n  {\n    \"value\": \"FJ\",\n    \"label\": \"Fiji\"\n  },\n  {\n    \"value\": \"FI\",\n    \"label\": \"Finland\"\n  },\n  {\n    \"value\": \"FR\",\n    \"label\": \"France\"\n  },\n  {\n    \"value\": \"GF\",\n    \"label\": \"French Guiana\"\n  },\n  {\n    \"value\": \"PF\",\n    \"label\": \"French Polynesia\"\n  },\n  {\n    \"value\": \"TF\",\n    \"label\": \"French Southern Territories\"\n  },\n  {\n    \"value\": \"GA\",\n    \"label\": \"Gabon\"\n  },\n  {\n    \"value\": \"GM\",\n    \"label\": \"Gambia\"\n  },\n  {\n    \"value\": \"GE\",\n    \"label\": \"Georgia\"\n  },\n  {\n    \"value\": \"DE\",\n    \"label\": \"Germany\"\n  },\n  {\n    \"value\": \"GH\",\n    \"label\": \"Ghana\"\n  },\n  {\n    \"value\": \"GI\",\n    \"label\": \"Gibraltar\"\n  },\n  {\n    \"value\": \"GR\",\n    \"label\": \"Greece\"\n  },\n  {\n    \"value\": \"GL\",\n    \"label\": \"Greenland\"\n  },\n  {\n    \"value\": \"GD\",\n    \"label\": \"Grenada\"\n  },\n  {\n    \"value\": \"GP\",\n    \"label\": \"Guadeloupe\"\n  },\n  {\n    \"value\": \"GU\",\n    \"label\": \"Guam\"\n  },\n  {\n    \"value\": \"GT\",\n    \"label\": \"Guatemala\"\n  },\n  {\n    \"value\": \"GG\",\n    \"label\": \"Guernsey\"\n  },\n  {\n    \"value\": \"GN\",\n    \"label\": \"Guinea\"\n  },\n  {\n    \"value\": \"GW\",\n    \"label\": \"Guinea-Bissau\"\n  },\n  {\n    \"value\": \"GY\",\n    \"label\": \"Guyana\"\n  },\n  {\n    \"value\": \"HT\",\n    \"label\": \"Haiti\"\n  },\n  {\n    \"value\": \"HM\",\n    \"label\": \"Heard Island and McDonald Islands\"\n  },\n  {\n    \"value\": \"VA\",\n    \"label\": \"Holy See (Vatican City State)\"\n  },\n  {\n    \"value\": \"HN\",\n    \"label\": \"Honduras\"\n  },\n  {\n    \"value\": \"HK\",\n    \"label\": \"Hong Kong\"\n  },\n  {\n    \"value\": \"HU\",\n    \"label\": \"Hungary\"\n  },\n  {\n    \"value\": \"IS\",\n    \"label\": \"Iceland\"\n  },\n  {\n    \"value\": \"IN\",\n    \"label\": \"India\"\n  },\n  {\n    \"value\": \"ID\",\n    \"label\": \"Indonesia\"\n  },\n  {\n    \"value\": \"IR\",\n    \"label\": \"Iran, Islamic Republic of\"\n  },\n  {\n    \"value\": \"IQ\",\n    \"label\": \"Iraq\"\n  },\n  {\n    \"value\": \"IE\",\n    \"label\": \"Ireland\"\n  },\n  {\n    \"value\": \"IM\",\n    \"label\": \"Isle of Man\"\n  },\n  {\n    \"value\": \"IL\",\n    \"label\": \"Israel\"\n  },\n  {\n    \"value\": \"IT\",\n    \"label\": \"Italy\"\n  },\n  {\n    \"value\": \"JM\",\n    \"label\": \"Jamaica\"\n  },\n  {\n    \"value\": \"JP\",\n    \"label\": \"Japan\"\n  },\n  {\n    \"value\": \"JE\",\n    \"label\": \"Jersey\"\n  },\n  {\n    \"value\": \"JO\",\n    \"label\": \"Jordan\"\n  },\n  {\n    \"value\": \"KZ\",\n    \"label\": \"Kazakhstan\"\n  },\n  {\n    \"value\": \"KE\",\n    \"label\": \"Kenya\"\n  },\n  {\n    \"value\": \"KI\",\n    \"label\": \"Kiribati\"\n  },\n  {\n    \"value\": \"KP\",\n    \"label\": \"Korea, Democratic People's Republic of\"\n  },\n  {\n    \"value\": \"KR\",\n    \"label\": \"Korea, Republic of\"\n  },\n  {\n    \"value\": \"KW\",\n    \"label\": \"Kuwait\"\n  },\n  {\n    \"value\": \"KG\",\n    \"label\": \"Kyrgyzstan\"\n  },\n  {\n    \"value\": \"LA\",\n    \"label\": \"Lao People's Democratic Republic\"\n  },\n  {\n    \"value\": \"LV\",\n    \"label\": \"Latvia\"\n  },\n  {\n    \"value\": \"LB\",\n    \"label\": \"Lebanon\"\n  },\n  {\n    \"value\": \"LS\",\n    \"label\": \"Lesotho\"\n  },\n  {\n    \"value\": \"LR\",\n    \"label\": \"Liberia\"\n  },\n  {\n    \"value\": \"LY\",\n    \"label\": \"Libya\"\n  },\n  {\n    \"value\": \"LI\",\n    \"label\": \"Liechtenstein\"\n  },\n  {\n    \"value\": \"LT\",\n    \"label\": \"Lithuania\"\n  },\n  {\n    \"value\": \"LU\",\n    \"label\": \"Luxembourg\"\n  },\n  {\n    \"value\": \"MO\",\n    \"label\": \"Macao\"\n  },\n  {\n    \"value\": \"MK\",\n    \"label\": \"Macedonia, the Former Yugoslav Republic of\"\n  },\n  {\n    \"value\": \"MG\",\n    \"label\": \"Madagascar\"\n  },\n  {\n    \"value\": \"MW\",\n    \"label\": \"Malawi\"\n  },\n  {\n    \"value\": \"MY\",\n    \"label\": \"Malaysia\"\n  },\n  {\n    \"value\": \"MV\",\n    \"label\": \"Maldives\"\n  },\n  {\n    \"value\": \"ML\",\n    \"label\": \"Mali\"\n  },\n  {\n    \"value\": \"MT\",\n    \"label\": \"Malta\"\n  },\n  {\n    \"value\": \"MH\",\n    \"label\": \"Marshall Islands\"\n  },\n  {\n    \"value\": \"MQ\",\n    \"label\": \"Martinique\"\n  },\n  {\n    \"value\": \"MR\",\n    \"label\": \"Mauritania\"\n  },\n  {\n    \"value\": \"MU\",\n    \"label\": \"Mauritius\"\n  },\n  {\n    \"value\": \"YT\",\n    \"label\": \"Mayotte\"\n  },\n  {\n    \"value\": \"MX\",\n    \"label\": \"Mexico\"\n  },\n  {\n    \"value\": \"FM\",\n    \"label\": \"Micronesia, Federated States of\"\n  },\n  {\n    \"value\": \"MD\",\n    \"label\": \"Moldova, Republic of\"\n  },\n  {\n    \"value\": \"MC\",\n    \"label\": \"Monaco\"\n  },\n  {\n    \"value\": \"MN\",\n    \"label\": \"Mongolia\"\n  },\n  {\n    \"value\": \"ME\",\n    \"label\": \"Montenegro\"\n  },\n  {\n    \"value\": \"MS\",\n    \"label\": \"Montserrat\"\n  },\n  {\n    \"value\": \"MA\",\n    \"label\": \"Morocco\"\n  },\n  {\n    \"value\": \"MZ\",\n    \"label\": \"Mozambique\"\n  },\n  {\n    \"value\": \"MM\",\n    \"label\": \"Myanmar\"\n  },\n  {\n    \"value\": \"NA\",\n    \"label\": \"Namibia\"\n  },\n  {\n    \"value\": \"NR\",\n    \"label\": \"Nauru\"\n  },\n  {\n    \"value\": \"NP\",\n    \"label\": \"Nepal\"\n  },\n  {\n    \"value\": \"NL\",\n    \"label\": \"Netherlands\"\n  },\n  {\n    \"value\": \"NC\",\n    \"label\": \"New Caledonia\"\n  },\n  {\n    \"value\": \"NZ\",\n    \"label\": \"New Zealand\"\n  },\n  {\n    \"value\": \"NI\",\n    \"label\": \"Nicaragua\"\n  },\n  {\n    \"value\": \"NE\",\n    \"label\": \"Niger\"\n  },\n  {\n    \"value\": \"NG\",\n    \"label\": \"Nigeria\"\n  },\n  {\n    \"value\": \"NU\",\n    \"label\": \"Niue\"\n  },\n  {\n    \"value\": \"NF\",\n    \"label\": \"Norfolk Island\"\n  },\n  {\n    \"value\": \"MP\",\n    \"label\": \"Northern Mariana Islands\"\n  },\n  {\n    \"value\": \"NO\",\n    \"label\": \"Norway\"\n  },\n  {\n    \"value\": \"OM\",\n    \"label\": \"Oman\"\n  },\n  {\n    \"value\": \"PK\",\n    \"label\": \"Pakistan\"\n  },\n  {\n    \"value\": \"PW\",\n    \"label\": \"Palau\"\n  },\n  {\n    \"value\": \"PS\",\n    \"label\": \"Palestine, State of\"\n  },\n  {\n    \"value\": \"PA\",\n    \"label\": \"Panama\"\n  },\n  {\n    \"value\": \"PG\",\n    \"label\": \"Papua New Guinea\"\n  },\n  {\n    \"value\": \"PY\",\n    \"label\": \"Paraguay\"\n  },\n  {\n    \"value\": \"PE\",\n    \"label\": \"Peru\"\n  },\n  {\n    \"value\": \"PH\",\n    \"label\": \"Philippines\"\n  },\n  {\n    \"value\": \"PN\",\n    \"label\": \"Pitcairn\"\n  },\n  {\n    \"value\": \"PL\",\n    \"label\": \"Poland\"\n  },\n  {\n    \"value\": \"PT\",\n    \"label\": \"Portugal\"\n  },\n  {\n    \"value\": \"PR\",\n    \"label\": \"Puerto Rico\"\n  },\n  {\n    \"value\": \"QA\",\n    \"label\": \"Qatar\"\n  },\n  {\n    \"value\": \"RE\",\n    \"label\": \"Réunion\"\n  },\n  {\n    \"value\": \"RO\",\n    \"label\": \"Romania\"\n  },\n  {\n    \"value\": \"RU\",\n    \"label\": \"Russian Federation\"\n  },\n  {\n    \"value\": \"RW\",\n    \"label\": \"Rwanda\"\n  },\n  {\n    \"value\": \"BL\",\n    \"label\": \"Saint Barthélemy\"\n  },\n  {\n    \"value\": \"SH\",\n    \"label\": \"Saint Helena, Ascension and Tristan da Cunha\"\n  },\n  {\n    \"value\": \"KN\",\n    \"label\": \"Saint Kitts and Nevis\"\n  },\n  {\n    \"value\": \"LC\",\n    \"label\": \"Saint Lucia\"\n  },\n  {\n    \"value\": \"MF\",\n    \"label\": \"Saint Martin (French part)\"\n  },\n  {\n    \"value\": \"PM\",\n    \"label\": \"Saint Pierre and Miquelon\"\n  },\n  {\n    \"value\": \"VC\",\n    \"label\": \"Saint Vincent and the Grenadines\"\n  },\n  {\n    \"value\": \"WS\",\n    \"label\": \"Samoa\"\n  },\n  {\n    \"value\": \"SM\",\n    \"label\": \"San Marino\"\n  },\n  {\n    \"value\": \"ST\",\n    \"label\": \"Sao Tome and Principe\"\n  },\n  {\n    \"value\": \"SA\",\n    \"label\": \"Saudi Arabia\"\n  },\n  {\n    \"value\": \"SN\",\n    \"label\": \"Senegal\"\n  },\n  {\n    \"value\": \"RS\",\n    \"label\": \"Serbia\"\n  },\n  {\n    \"value\": \"SC\",\n    \"label\": \"Seychelles\"\n  },\n  {\n    \"value\": \"SL\",\n    \"label\": \"Sierra Leone\"\n  },\n  {\n    \"value\": \"SG\",\n    \"label\": \"Singapore\"\n  },\n  {\n    \"value\": \"SX\",\n    \"label\": \"Sint Maarten (Dutch part)\"\n  },\n  {\n    \"value\": \"SK\",\n    \"label\": \"Slovakia\"\n  },\n  {\n    \"value\": \"SI\",\n    \"label\": \"Slovenia\"\n  },\n  {\n    \"value\": \"SB\",\n    \"label\": \"Solomon Islands\"\n  },\n  {\n    \"value\": \"SO\",\n    \"label\": \"Somalia\"\n  },\n  {\n    \"value\": \"ZA\",\n    \"label\": \"South Africa\"\n  },\n  {\n    \"value\": \"GS\",\n    \"label\": \"South Georgia and the South Sandwich Islands\"\n  },\n  {\n    \"value\": \"SS\",\n    \"label\": \"South Sudan\"\n  },\n  {\n    \"value\": \"ES\",\n    \"label\": \"Spain\"\n  },\n  {\n    \"value\": \"LK\",\n    \"label\": \"Sri Lanka\"\n  },\n  {\n    \"value\": \"SD\",\n    \"label\": \"Sudan\"\n  },\n  {\n    \"value\": \"SR\",\n    \"label\": \"Suriname\"\n  },\n  {\n    \"value\": \"SJ\",\n    \"label\": \"Svalbard and Jan Mayen\"\n  },\n  {\n    \"value\": \"SZ\",\n    \"label\": \"Swaziland\"\n  },\n  {\n    \"value\": \"SE\",\n    \"label\": \"Sweden\"\n  },\n  {\n    \"value\": \"CH\",\n    \"label\": \"Switzerland\"\n  },\n  {\n    \"value\": \"SY\",\n    \"label\": \"Syrian Arab Republic\"\n  },\n  {\n    \"value\": \"TW\",\n    \"label\": \"Taiwan, Province of China\"\n  },\n  {\n    \"value\": \"TJ\",\n    \"label\": \"Tajikistan\"\n  },\n  {\n    \"value\": \"TZ\",\n    \"label\": \"Tanzania, United Republic of\"\n  },\n  {\n    \"value\": \"TH\",\n    \"label\": \"Thailand\"\n  },\n  {\n    \"value\": \"TL\",\n    \"label\": \"Timor-Leste\"\n  },\n  {\n    \"value\": \"TG\",\n    \"label\": \"Togo\"\n  },\n  {\n    \"value\": \"TK\",\n    \"label\": \"Tokelau\"\n  },\n  {\n    \"value\": \"TO\",\n    \"label\": \"Tonga\"\n  },\n  {\n    \"value\": \"TT\",\n    \"label\": \"Trinidad and Tobago\"\n  },\n  {\n    \"value\": \"TN\",\n    \"label\": \"Tunisia\"\n  },\n  {\n    \"value\": \"TR\",\n    \"label\": \"Turkey\"\n  },\n  {\n    \"value\": \"TM\",\n    \"label\": \"Turkmenistan\"\n  },\n  {\n    \"value\": \"TC\",\n    \"label\": \"Turks and Caicos Islands\"\n  },\n  {\n    \"value\": \"TV\",\n    \"label\": \"Tuvalu\"\n  },\n  {\n    \"value\": \"UG\",\n    \"label\": \"Uganda\"\n  },\n  {\n    \"value\": \"UA\",\n    \"label\": \"Ukraine\"\n  },\n  {\n    \"value\": \"AE\",\n    \"label\": \"United Arab Emirates\"\n  },\n  {\n    \"value\": \"GB\",\n    \"label\": \"United Kingdom\"\n  },\n  {\n    \"value\": \"US\",\n    \"label\": \"United States\"\n  },\n  {\n    \"value\": \"UM\",\n    \"label\": \"United States Minor Outlying Islands\"\n  },\n  {\n    \"value\": \"UY\",\n    \"label\": \"Uruguay\"\n  },\n  {\n    \"value\": \"UZ\",\n    \"label\": \"Uzbekistan\"\n  },\n  {\n    \"value\": \"VU\",\n    \"label\": \"Vanuatu\"\n  },\n  {\n    \"value\": \"VE\",\n    \"label\": \"Venezuela, Bolivarian Republic of\"\n  },\n  {\n    \"value\": \"VN\",\n    \"label\": \"Viet Nam\"\n  },\n  {\n    \"value\": \"VG\",\n    \"label\": \"Virgin Islands, British\"\n  },\n  {\n    \"value\": \"VI\",\n    \"label\": \"Virgin Islands, U.S.\"\n  },\n  {\n    \"value\": \"WF\",\n    \"label\": \"Wallis and Futuna\"\n  },\n  {\n    \"value\": \"EH\",\n    \"label\": \"Western Sahara\"\n  },\n  {\n    \"value\": \"YE\",\n    \"label\": \"Yemen\"\n  },\n  {\n    \"value\": \"ZM\",\n    \"label\": \"Zambia\"\n  },\n  {\n    \"value\": \"ZW\",\n    \"label\": \"Zimbabwe\"\n  }\n]\n\nexport default COUNTRIES\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport ChartLine from '../../components/ChartLine'\nimport ChartBar from '../../components/ChartBar'\nimport { setCountry } from \"../../state/actions/countryActions\"\nimport { COUNTRIES } from '../../utils/countryList'\nimport { API_DIRECTORY_COUNTRY_TIMELINE, API_DIRECTORY_COUNTRY_TOTALS, API_DIRECTORY_COUNTRY_TOTAL } from '../../utils/constants'\nimport './App.css'\n\nconst mapStateToProps = state => {\n  return {\n    country: state.country\n  }\n}\n\nconst actionCreators = {\n  setCountry\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      datadownloading: false,\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    const { country } = this.props\n    if(country !== prevProps.country){\n      this.getCountryData()\n      this.getSimilarCountries()\n    }\n  }\n\n  getCountryData = async () => {\n    const { country } = this.props\n    this.setState({ datadownloading: true })\n\n    const res = await fetch(API_DIRECTORY_COUNTRY_TIMELINE + country.value)\n    if(!res.ok){\n      this.setState({ countryData: \"\" })\n    }\n    else{\n      // API JSON objesi döndürmek yerine uyarı olursa gömülü şekilde html etiketlerini de döndürüyor. O nedenle text'i önce temizleyip sonra JSON'a parse etmeyi tercih ettim.\n      const resCountryDataResponse = await res.text()\n      const resCountryDataText = resCountryDataResponse.split('<br />')\n      const resCountryDataJSON = JSON.parse(resCountryDataText[resCountryDataText.length - 1])\n      const timelineItems = resCountryDataJSON.timelineitems\n\n      this.setState({ datadownloading: false })\n      if(null != timelineItems && timelineItems[0].stat === \"ok\"){\n        this.setState({ countryData: timelineItems[0] })\n      }\n      else{\n        this.setState({ countryData: \"\" })\n      }\n    }\n  }\n\n  handleChangeCountry = () => {\n    let countrySelect = document.getElementById(\"country-select\")\n    let selectedCountry = countrySelect.options[countrySelect.selectedIndex]\n    const currentCountry = { value: selectedCountry.value, label: selectedCountry.text }\n    this.props.setCountry(currentCountry)\n  }\n\n  getSimilarCountries = async () => {\n\n    // Fetch total cases of selected country\n    const { country } = this.props\n    let totalCasesOfSelectedCountry = 0\n    const resTotal = await fetch(API_DIRECTORY_COUNTRY_TOTAL + country.value)\n    if(!resTotal.ok){\n      this.setState({ countryDataTotal: \"\" })\n    }\n    else{\n      // API JSON objesi döndürmek yerine uyarı olursa gömülü şekilde html etiketlerini de döndürüyor. O nedenle text'i önce temizleyip sonra JSON'a parse etmeyi tercih ettim.\n      const resCountryDataTotalResponse = await resTotal.text()\n      const resCountryDataTotalText = resCountryDataTotalResponse.split('<br />')\n      const resCountryDataTotalJSON = JSON.parse(resCountryDataTotalText[resCountryDataTotalText.length - 1])\n      const countryData = resCountryDataTotalJSON.countrydata\n\n      if(null != countryData && resCountryDataTotalJSON.stat === \"ok\"){\n        totalCasesOfSelectedCountry = countryData[0].total_cases\n      }\n    }\n\n    // Fetch all country total cases\n    const resTotals = await fetch(API_DIRECTORY_COUNTRY_TOTALS)\n    if(!resTotals.ok){\n      this.setState({ countryDataTotal: \"\" })\n    }\n    else{\n      // API JSON objesi döndürmek yerine uyarı olursa gömülü şekilde html etiketlerini de döndürüyor. O nedenle text'i önce temizleyip sonra JSON'a parse etmeyi tercih ettim.\n      const resCountryDataTotalsResponse = await resTotals.text()\n      const resCountryDataTotalsText = resCountryDataTotalsResponse.split('<br />')\n      const resCountryDataTotalsJSON = JSON.parse(resCountryDataTotalsText[resCountryDataTotalsText.length - 1])\n      const countryItems = resCountryDataTotalsJSON.countryitems\n      if(null != countryItems && countryItems[0].stat === \"ok\"){\n        this.setState({ countryDataTotal: countryItems[0] })\n\n        let similarCountries = []\n        const countryDataTotalsArray = Object.entries(countryItems[0])\n\n        // Loop through all countries to find similar countries\n        countryDataTotalsArray.map((currentCountry, i) => {\n          // Start with setting first 11 countries (It will include the country itself. We will remove it later.)\n          if(i < 11){\n            similarCountries.push(currentCountry)\n          }\n          else{\n            let maxDifference = 0\n            let indexOfMaxDifference\n            let newIndex\n\n            // Get maximum difference from the current selected countries.\n            similarCountries.map((currentSimilarCountry, k) => {\n              let difference = Math.abs(similarCountries[k][1][\"total_cases\"] - totalCasesOfSelectedCountry)\n              if(difference > maxDifference ){\n                maxDifference = difference\n                indexOfMaxDifference = k\n                newIndex = i\n              }\n            })\n\n            // If new country has less than maximum difference let it be the new entry.\n            if(maxDifference !== 0 && i !== countryDataTotalsArray.length - 1){\n              similarCountries.splice(indexOfMaxDifference, 1)\n              similarCountries.push(countryDataTotalsArray[i])\n            }\n          }\n        })\n        // Set it to state to pass child chart components\n        this.setState({ similarCountries: similarCountries })\n      }\n    }\n  }\n\n  render() {\n    const { country } = this.props\n    const { datadownloading, countryData, similarCountries } = this.state\n    const chartsArea = datadownloading\n    ?\n    <div className=\"charts-container charts-container-downloading\">\n      <div className=\"charts-container-downloading-text\">\n        Loading...\n      </div>\n    </div>\n    :\n    (\n      countryData === \"\"\n      ?\n      <div className=\"charts-container\">\n        <div className=\"charts-container-text\">\n          The country you select have no data available right now.\n        </div>\n      </div>\n      :\n      <div className=\"charts-container\">\n        <ChartLine\n          mode = 'DAILY_CASE'\n          countryInfo = {country}\n          countryData = {countryData}\n          isCalendarPresent = {true}\n          isDayIntervalPresent = {true}\n          dataMin = {0}\n          similarCountries = {similarCountries}\n        />\n        <ChartLine\n          mode = 'MORTALITY_RATE_PERCENTAGE'\n          countryInfo = {country}\n          countryData = {countryData}\n          isCalendarPresent = {true}\n          isDayIntervalPresent = {true}\n          dataMin = {0}\n          similarCountries = {similarCountries}\n        />\n        <ChartBar\n          mode = 'DAILY_DEATH_CHANGE'\n          countryInfo = {country}\n          countryData = {countryData}\n          isCalendarPresent = {true}\n          isDayIntervalPresent = {false}\n          dataMin = 'dataMin'\n          similarCountries = {similarCountries}\n        />\n        <ChartLine\n          mode = 'TOTAL_CASE_SINCE_100'\n          countryInfo = {country}\n          countryData = {countryData}\n          isCalendarPresent = {false}\n          isDayIntervalPresent = {false}\n          dataMin = 'dataMin'\n          similarCountries = {similarCountries}\n        />\n      </div>\n    )\n\n    return (\n      <div className=\"app-container\">\n        <h1 className=\"app-title\">COVID-19 Country Data Visualization</h1>\n        <div className=\"country-select-container\">\n        <select id=\"country-select\" className=\"country-select\" onChange={this.handleChangeCountry}>\n          <option value=\"\" hidden>Select a country</option>\n          {\n            null != COUNTRIES && COUNTRIES.map((Country)=>{\n              return <option key={Country.value} value={Country.value}>{Country.label}</option>\n            })\n          }\n        </select>\n        </div>\n        {chartsArea}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(App)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\n\nimport App from './HomePage/App'\n\nclass Routes extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n      <Switch>\n\t\t\t\t<Route exact path='/covid' component={App} />\n      </Switch>\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nexport default Routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './state/reducers'\nimport './index.css'\nimport Routes from './pages/Routes'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}