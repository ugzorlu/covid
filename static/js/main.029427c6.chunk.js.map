{"version":3,"sources":["state/actions/countryActions.js","state/reducers/countryReducer.js","state/reducers/index.js","utils/constants.js","utils/covidCalculations.js","components/LineChart.jsx","components/BarCharts.jsx","utils/countryList.js","pages/HomePage/App.js","pages/CountryPage/Country.js","pages/Routes.js","serviceWorker.js","index.js"],"names":["setCountry","country","type","initialCountryState","value","label","combineReducers","state","action","getMovingAverageDayInterval","mode","dayInterval","getData","countryData","dayValueOfMovingAverage","startDate","endDate","data","countryDataArray","Object","entries","map","dailyData","index","moment","isBetween","totalCases","slice","newDailyData","movingAverage","push","date","format","average","Math","floor","max","totalPercentage","dailydeathchange","LineCharts","props","handleClickOutsideDayButton","e","dayDropdown","document","getElementById","dayButton","contains","target","setState","isDayIntervalDropdownHidden","handleDayIntervalDropdown","prevState","changeDayInterval","dayinterval","currentTarget","dataset","handleStartDateChange","handleEndDateChange","subtract","addEventListener","this","removeEventListener","name","add","dataMaxX","dataMaxY","entry","dayArea","id","className","onClick","icon","faChevronDown","color","style","display","Array","x","i","data-dayinterval","key","width","height","margin","top","right","left","bottom","dataKey","stroke","isAnimationActive","dot","strokeDasharray","interval","tick","angle","domain","dataMax","ceil","trunc","isFront","r","y","fill","offset","position","dateFormat","selected","Date","maxDate","onChange","minDate","Component","BarCharts","COUNTRIES","actionCreators","App","getCountryData","a","datadownloading","fetch","API_DIRECTORY","res","text","resCountryDataText","split","resCountryDataJSON","JSON","parse","length","timelineitems","stat","handleChangeCountry","countrySelect","selectedCountry","options","selectedIndex","currentCountry","prevProps","chartsArea","defaultValue","hidden","Country","connect","console","log","match","params","countryvalue","Routes","exact","path","component","Boolean","window","location","hostname","store","createStore","reducer","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.029427c6.chunk.js","sourcesContent":["export const SET_COUNTRY = 'SET_COUNTRY'\n\nexport function setCountry(country){\n\treturn { type: SET_COUNTRY, country }\n}\n","import {\n  SET_COUNTRY\n} from '../actions/countryActions'\n\nconst initialCountryState = {\n\tvalue: \"\",\n  label: \"\"\n}\n\nexport default function reducer (state = initialCountryState, action){\n\tswitch(action.type){\n\t\tcase SET_COUNTRY: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.country.value,\n        label: action.country.label\n\t\t\t}\n\t\t}\n\t\tdefault:\n      return state\n\t}\n}\n","import { combineReducers } from 'redux'\n\nimport country from './countryReducer'\n\nexport default combineReducers({\n\tcountry\n})\n","export const API_DIRECTORY = 'https://api.thevirustracker.com/free-api'\n\nexport const getMovingAverageDayInterval = (mode) => {\n  let dayInterval\n  switch (mode) {\n      case 'DAILY_CASE':\n          dayInterval = 7\n          break\n      case 'MORTALITY_RATE_PERCENTAGE':\n          dayInterval = 3\n          break\n      default:\n          dayInterval = 1\n  }\n  return dayInterval\n}\n","import moment from 'moment'\n\nexport const getData = (mode, countryData, dayValueOfMovingAverage, startDate, endDate) => {\n  let data = []\n  const countryDataArray = Object.entries(countryData)\n\n  if(mode === 'DAILY_CASE'){\n    countryDataArray.map((dailyData, index) => {\n\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let totalCases = 0\n        let newCountryDataArray = []\n\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n        }\n        else{\n          newCountryDataArray = countryDataArray.slice(0, index)\n        }\n\n        newCountryDataArray.map(newDailyData => {\n          totalCases += newDailyData[1][\"new_daily_cases\"]\n        })\n\n        let movingAverage = totalCases / dayValueOfMovingAverage\n        data.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), average: Math.floor(movingAverage  * 100) / 100 , max: 10000 })\n      }\n    })\n  }\n  else if(mode === 'MORTALITY_RATE_PERCENTAGE'){\n    countryDataArray.map((dailyData, index) => {\n\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let totalPercentage = 0\n        let newCountryDataArray = []\n\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n        }\n        else{\n          newCountryDataArray = countryDataArray.slice(0, index)\n        }\n\n        newCountryDataArray.map(newDailyData => {\n          totalPercentage += newDailyData[1][\"total_deaths\"] / newDailyData[1][\"total_cases\"]\n        })\n\n        let movingAverage = totalPercentage / dayValueOfMovingAverage\n        data.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), average: Math.floor(movingAverage  * 10000) / 10000 })\n      }\n    })\n  }\n  else if(mode === 'DAILY_DEATH_CHANGE'){\n    countryDataArray.map((dailyData, index) => {\n\n      if(moment(dailyData[0]).isBetween(startDate, endDate)){\n        let dailydeathchange = 0\n        // let newCountryDataArray = []\n\n        if(null != countryDataArray[index-dayValueOfMovingAverage]){\n          // newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n          dailydeathchange = countryDataArray[index][1][\"new_daily_deaths\"] - countryDataArray[index-dayValueOfMovingAverage][1][\"new_daily_deaths\"]\n        }\n        // else{\n        //   newCountryDataArray = countryDataArray.slice(0, index)\n        // }\n\n        // newCountryDataArray.map(newDailyData => {\n        //   totalPercentage += newDailyData[1][\"total_deaths\"] / newDailyData[1][\"total_cases\"]\n        // })\n\n        // let movingAverage = totalPercentage / dayValueOfMovingAverage\n        data.push({ date: moment(dailyData[0]).format(\"DD/M/YY\"), dailydeathchange: dailydeathchange })\n      }\n    })\n  }\n\n\n  return data\n}\n\nexport const getMovingAverageOfDailyCases = (mode, countryData, dayValueOfMovingAverage, startDate, endDate) => {\n  let data = []\n  const countryDataArray = Object.entries(countryData)\n\n  countryDataArray.map((dailyData, index) => {\n\n    if(moment(dailyData[0]).isBetween(startDate, endDate)){\n      let totalCases = 0\n      let newCountryDataArray = []\n\n      if(null != countryDataArray[index-dayValueOfMovingAverage]){\n        newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n      }\n      else{\n        newCountryDataArray = countryDataArray.slice(0, index)\n      }\n\n      newCountryDataArray.map(newDailyData => {\n        totalCases += newDailyData[1][\"new_daily_cases\"]\n      })\n\n      let movingAverage = totalCases / dayValueOfMovingAverage\n      data.push({ date: moment(dailyData[0]).format(\"M/DD/YY\"), average: Math.floor(movingAverage  * 100) / 100 })\n    }\n  })\n  return data\n}\n\nexport const getMovingAverageOfMortalityRatePercentage = (mode, countryData, dayValueOfMovingAverage, startDate, endDate) => {\n  let data = []\n  const countryDataArray = Object.entries(countryData)\n\n  countryDataArray.map((dailyData, index) => {\n\n    if(moment(dailyData[0]).isBetween(startDate, endDate)){\n      let totalCases = 0\n      let newCountryDataArray = []\n\n      if(null != countryDataArray[index-dayValueOfMovingAverage]){\n        newCountryDataArray = countryDataArray.slice(index-dayValueOfMovingAverage, index)\n      }\n      else{\n        newCountryDataArray = countryDataArray.slice(0, index)\n      }\n\n      newCountryDataArray.map(newDailyData => {\n        totalCases += newDailyData[1][\"new_daily_cases\"]\n      })\n\n      let movingAverage = totalCases / dayValueOfMovingAverage\n      data.push({ date: moment(dailyData[0]).format(\"M/DD/YY\"), average: Math.floor(movingAverage  * 100) / 100 })\n    }\n  })\n  return data\n}\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ResponsiveContainer, Label, ReferenceDot } from 'recharts'\nimport DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getMovingAverageDayInterval } from '../utils/constants'\nimport { getData } from '../utils/covidCalculations'\nimport './LineChart.css'\n\n// const DateInput = ({ value, onClick }) => (\n//   <div className=\"linechart-datebutton\" onClick={onClick}>\n//     <div className=\"linechart-datebutton-wrapper\">\n//     <span className=\"linechart-datevalue-wrapper\">{value}</span>\n//     <span className=\"linechart-dateicon-wrapper\"><FontAwesomeIcon icon={faChevronDown} color=\"#96ADC8\"/></span>\n//     </div>\n//   </div>\n// )\n\nclass LineCharts extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dayValueOfMovingAverage: getMovingAverageDayInterval(this.props.mode),\n      startDate: moment().subtract(60, \"days\").format(\"M/DD/YY\"),\n      endDate: moment().format(\"M/DD/YY\"),\n      isDayIntervalDropdownHidden: true\n    }\n  }\n\n  componentDidMount(){\n    document.addEventListener('click', this.handleClickOutsideDayButton, true)\n    document.addEventListener('touchstart', this.handleClickOutsideDayButton, true)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutsideDayButton, true)\n    document.removeEventListener('touchstart', this.handleClickOutsideDayButton, true)\n  }\n\n  handleClickOutsideDayButton = (e) => {\n    // Toggle day dropdown down when clicked outside\n    const dayDropdown = document.getElementById(\"linechart-daydropdown\")\n    const dayButton = document.getElementById(\"linechart-daybutton\")\n    if (null !== dayDropdown && !dayDropdown.contains(e.target) && null !== dayButton && !dayButton.contains(e.target)) {\n      this.setState({ isDayIntervalDropdownHidden: true })\n    }\n  }\n\n  handleDayIntervalDropdown = () => {\n    // Toggle day dropdown according to previous state\n    this.setState(prevState => ({\n      ...prevState,\n      isDayIntervalDropdownHidden: !prevState.isDayIntervalDropdownHidden\n    }))\n  }\n\n  changeDayInterval = (e) => {\n    const selectedDay = e.currentTarget\n    const dayinterval = selectedDay.dataset.dayinterval\n    this.setState({ dayValueOfMovingAverage: dayinterval, isDayIntervalDropdownHidden: true })\n  }\n\n  handleStartDateChange = (date) => {\n    this.setState({ startDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  handleEndDateChange = (date) => {\n    this.setState({ endDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  render() {\n    const { mode, countryData } = this.props\n    if(null == countryData){ return null }\n    const { dayValueOfMovingAverage, startDate, endDate } = this.state\n    let name\n    switch (mode) {\n        case 'DAILY_CASE':\n            name = 'moving average of daily cases'\n            break\n        case 'MORTALITY_RATE_PERCENTAGE':\n            name = 'moving average of mortality rate'\n            break\n        default:\n            name = ''\n    }\n    //Getting data from props according to calculations\n    const data = getData(mode, countryData, dayValueOfMovingAverage, moment(startDate).subtract(1, \"days\").format(\"M/DD/YY\"), moment(endDate).add(1, \"days\").format(\"M/DD/YY\"))\n\n    //Finding the peak points\n    let dataMaxX = ''\n    let dataMaxY = 0\n    data.map((entry, index) => {\n      if(data[index].average > dataMaxY){\n        dataMaxX = data[index].date\n        dataMaxY = data[index].average\n      }\n    })\n\n    const dayArea =\n    <>\n    <div id=\"linechart-daybutton\" className=\"linechart-daybutton\" onClick={this.handleDayIntervalDropdown}>\n      <div className=\"linechart-daybutton-wrapper\">\n      <span className=\"linechart-dayvalue-wrapper\">{dayValueOfMovingAverage}-day</span>\n      <span className=\"linechart-dayicon-wrapper\"><FontAwesomeIcon icon={faChevronDown} color=\"#96ADC8\"/></span>\n      </div>\n    </div>\n    <div id=\"linechart-daydropdown\" className=\"linechart-daydropdown\" style={{display: this.state.isDayIntervalDropdownHidden ? 'none' : 'inline-block'}}>\n      {\n        [...Array(16)].map((x, i) => {\n          if(i > 1){\n            return <div className=\"linechart-dayselect\" data-dayinterval={i} key={i+\"day\"} onClick={this.changeDayInterval}>\n              {i}-day\n            </div>\n          }\n        })\n      }\n    </div>\n    </>\n\n\n\n    return (\n      <>\n      <div className=\"linechart-container\">\n      <div className=\"linechart-name-container\">\n        {dayArea}\n        <span className=\"linechart-name\">{name}</span>\n      </div>\n      <div className=\"linechart-wrapper\">\n      <ResponsiveContainer width=\"100%\" height={350} display=\"inline-block\">\n      <LineChart data={data} margin={{ top: 5, right: 5, left: 0, bottom: 5 }}>\n        <Line type=\"monotone\" dataKey=\"average\" stroke=\"#d88484\" isAnimationActive={false} dot={false} />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" interval=\"preserveEnd\" tick={{ angle: -10 }} />\n\n        <YAxis type=\"number\" interval=\"preserveStartEnd\" domain={[0, dataMax => dataMax * 1.2 < 10 ? Math.floor(dataMax * 1.2  * 100) / 100 : Math.ceil(Math.trunc(dataMax * 1.2)/100)*100]} >\n        </YAxis>\n        <Tooltip />\n        <ReferenceDot isFront={true} r={5} x={dataMaxX} y={dataMaxY} fill=\"#D62728\" stroke=\"none\">\n          <Label value=\"Peak\" offset={0} position=\"top\" />\n        </ReferenceDot>\n      </LineChart>\n      </ResponsiveContainer>\n      </div>\n      </div>\n      <div className=\"linechart-dates-container\">\n      <div className=\"linechart-date-container linechart-startdate-container\">\n      <span className=\"linechart-date-label\">Start date</span>\n      <DatePicker\n        className=\"linechart-startdatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(startDate)}\n        maxDate={new Date(endDate)}\n        onChange={this.handleStartDateChange}\n      />\n      </div>\n      <div className=\"linechart-date-container linechart-enddate-container\">\n      <span className=\"linechart-date-label\">End date</span>\n      <DatePicker\n        className=\"linechart-enddatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(endDate)}\n        minDate={new Date(startDate)}\n        maxDate={new Date()}\n        onChange={this.handleEndDateChange}\n      />\n      </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default LineCharts\n","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { BarChart, Bar, Cell, XAxis, YAxis, Tooltip, ResponsiveContainer, ReferenceLine } from 'recharts'\nimport DatePicker from \"react-datepicker\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getMovingAverageDayInterval } from '../utils/constants'\nimport { getData } from '../utils/covidCalculations'\nimport './BarCharts.css'\n\n// const DateInput = ({ value, onClick }) => (\n//   <div className=\"barchart-datebutton\" onClick={onClick}>\n//     <div className=\"barchart-datebutton-wrapper\">\n//     <span className=\"barchart-datevalue-wrapper\">{value}</span>\n//     <span className=\"barchart-dateicon-wrapper\"><FontAwesomeIcon icon={faChevronDown} color=\"#96ADC8\"/></span>\n//     </div>\n//   </div>\n// )\n\nclass BarCharts extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      dayValueOfMovingAverage: getMovingAverageDayInterval(this.props.mode),\n      startDate: moment().subtract(60, \"days\").format(\"M/DD/YY\"),\n      endDate: moment().format(\"M/DD/YY\")\n    }\n  }\n\n  handleStartDateChange = (date) => {\n    this.setState({ startDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  handleEndDateChange = (date) => {\n    this.setState({ endDate: moment(date).format(\"M/DD/YY\") })\n  }\n\n  render() {\n    const { mode, countryData } = this.props\n    if(null == countryData){\n      return null\n    }\n    const { dayValueOfMovingAverage, startDate, endDate } = this.state\n    let name\n    switch (mode) {\n        case 'DAILY_DEATH_CHANGE':\n            name = 'Daily new deaths changed from the previous day’s death count'\n            break\n        default:\n            name = ''\n    }\n\n    //Getting data from props according to calculations\n    const data = getData(mode, countryData, dayValueOfMovingAverage, moment(startDate).subtract(1, \"days\").format(\"M/DD/YY\"), moment(endDate).add(1, \"days\").format(\"M/DD/YY\"))\n\n    return (\n      <>\n      <div className=\"barchart-container\">\n      <div className=\"barchart-name\">\n        {name}\n      </div>\n      <div className=\"barchart-wrapper\">\n      <ResponsiveContainer width=\"95%\" height={350} display=\"inline-block\">\n      <BarChart data={data} margin={{ top: 5, right: 15, left: 15, bottom: 5 }}>\n        <Bar dataKey=\"dailydeathchange\" fill=\"#8884d8\" >\n        {\n           data.map((entry, index) => (\n             <Cell key={`cell-${index}`} fill={entry.dailydeathchange > 0 ? \"#D62728\" : \"#2E8B57\"}/>\n           ))\n         }\n        </Bar>\n        <XAxis dataKey=\"date\" interval=\"preserveEnd\" tick={{ angle: -10 }} />\n\n        <YAxis type=\"number\" domain={['dataMin', 'dataMax']} >\n        </YAxis>\n        <ReferenceLine y={0} stroke=\"#000\" />\n        <Tooltip />\n      </BarChart>\n      </ResponsiveContainer>\n      </div>\n      </div>\n      <div className=\"barchart-dates-container\">\n      <div className=\"barchart-date-container barchart-startdate\">\n      <span className=\"barchart-date-label\">Start date</span>\n      <DatePicker\n        className=\"barchart-startdatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(startDate)}\n        maxDate={new Date(endDate)}\n        onChange={this.handleStartDateChange}\n      />\n      </div>\n      <div className=\"barchart-date-container barchart-enddate\">\n      <span className=\"barchart-date-label\">End date</span>\n      <DatePicker\n        className=\"barchart-enddatepicker\"\n        dateFormat=\"dd/M/yy\"\n        selected={new Date(endDate)}\n        minDate={new Date(startDate)}\n        maxDate={new Date()}\n        onChange={this.handleEndDateChange}\n      />\n      </div>\n      </div>\n      </>\n    )\n  }\n}\n\nexport default BarCharts\n","export const COUNTRIES = [\n  {\n    \"value\": \"AF\",\n    \"label\": \"Afghanistan\"\n  },\n  {\n    \"value\": \"AX\",\n    \"label\": \"Åland Islands\"\n  },\n  {\n    \"value\": \"AL\",\n    \"label\": \"Albania\"\n  },\n  {\n    \"value\": \"DZ\",\n    \"label\": \"Algeria\"\n  },\n  {\n    \"value\": \"AS\",\n    \"label\": \"American Samoa\"\n  },\n  {\n    \"value\": \"AD\",\n    \"label\": \"Andorra\"\n  },\n  {\n    \"value\": \"AO\",\n    \"label\": \"Angola\"\n  },\n  {\n    \"value\": \"AI\",\n    \"label\": \"Anguilla\"\n  },\n  {\n    \"value\": \"AQ\",\n    \"label\": \"Antarctica\"\n  },\n  {\n    \"value\": \"AG\",\n    \"label\": \"Antigua and Barbuda\"\n  },\n  {\n    \"value\": \"AR\",\n    \"label\": \"Argentina\"\n  },\n  {\n    \"value\": \"AM\",\n    \"label\": \"Armenia\"\n  },\n  {\n    \"value\": \"AW\",\n    \"label\": \"Aruba\"\n  },\n  {\n    \"value\": \"AU\",\n    \"label\": \"Australia\"\n  },\n  {\n    \"value\": \"AT\",\n    \"label\": \"Austria\"\n  },\n  {\n    \"value\": \"AZ\",\n    \"label\": \"Azerbaijan\"\n  },\n  {\n    \"value\": \"BS\",\n    \"label\": \"Bahamas\"\n  },\n  {\n    \"value\": \"BH\",\n    \"label\": \"Bahrain\"\n  },\n  {\n    \"value\": \"BD\",\n    \"label\": \"Bangladesh\"\n  },\n  {\n    \"value\": \"BB\",\n    \"label\": \"Barbados\"\n  },\n  {\n    \"value\": \"BY\",\n    \"label\": \"Belarus\"\n  },\n  {\n    \"value\": \"BE\",\n    \"label\": \"Belgium\"\n  },\n  {\n    \"value\": \"BZ\",\n    \"label\": \"Belize\"\n  },\n  {\n    \"value\": \"BJ\",\n    \"label\": \"Benin\"\n  },\n  {\n    \"value\": \"BM\",\n    \"label\": \"Bermuda\"\n  },\n  {\n    \"value\": \"BT\",\n    \"label\": \"Bhutan\"\n  },\n  {\n    \"value\": \"BO\",\n    \"label\": \"Bolivia, Plurinational State of\"\n  },\n  {\n    \"value\": \"BQ\",\n    \"label\": \"Bonaire, Sint Eustatius and Saba\"\n  },\n  {\n    \"value\": \"BA\",\n    \"label\": \"Bosnia and Herzegovina\"\n  },\n  {\n    \"value\": \"BW\",\n    \"label\": \"Botswana\"\n  },\n  {\n    \"value\": \"BV\",\n    \"label\": \"Bouvet Island\"\n  },\n  {\n    \"value\": \"BR\",\n    \"label\": \"Brazil\"\n  },\n  {\n    \"value\": \"IO\",\n    \"label\": \"British Indian Ocean Territory\"\n  },\n  {\n    \"value\": \"BN\",\n    \"label\": \"Brunei Darussalam\"\n  },\n  {\n    \"value\": \"BG\",\n    \"label\": \"Bulgaria\"\n  },\n  {\n    \"value\": \"BF\",\n    \"label\": \"Burkina Faso\"\n  },\n  {\n    \"value\": \"BI\",\n    \"label\": \"Burundi\"\n  },\n  {\n    \"value\": \"KH\",\n    \"label\": \"Cambodia\"\n  },\n  {\n    \"value\": \"CM\",\n    \"label\": \"Cameroon\"\n  },\n  {\n    \"value\": \"CA\",\n    \"label\": \"Canada\"\n  },\n  {\n    \"value\": \"CV\",\n    \"label\": \"Cape Verde\"\n  },\n  {\n    \"value\": \"KY\",\n    \"label\": \"Cayman Islands\"\n  },\n  {\n    \"value\": \"CF\",\n    \"label\": \"Central African Republic\"\n  },\n  {\n    \"value\": \"TD\",\n    \"label\": \"Chad\"\n  },\n  {\n    \"value\": \"CL\",\n    \"label\": \"Chile\"\n  },\n  {\n    \"value\": \"CN\",\n    \"label\": \"China\"\n  },\n  {\n    \"value\": \"CX\",\n    \"label\": \"Christmas Island\"\n  },\n  {\n    \"value\": \"CC\",\n    \"label\": \"Cocos (Keeling) Islands\"\n  },\n  {\n    \"value\": \"CO\",\n    \"label\": \"Colombia\"\n  },\n  {\n    \"value\": \"KM\",\n    \"label\": \"Comoros\"\n  },\n  {\n    \"value\": \"CG\",\n    \"label\": \"Congo\"\n  },\n  {\n    \"value\": \"CD\",\n    \"label\": \"Congo, the Democratic Republic of the\"\n  },\n  {\n    \"value\": \"CK\",\n    \"label\": \"Cook Islands\"\n  },\n  {\n    \"value\": \"CR\",\n    \"label\": \"Costa Rica\"\n  },\n  {\n    \"value\": \"CI\",\n    \"label\": \"Côte d'Ivoire\"\n  },\n  {\n    \"value\": \"HR\",\n    \"label\": \"Croatia\"\n  },\n  {\n    \"value\": \"CU\",\n    \"label\": \"Cuba\"\n  },\n  {\n    \"value\": \"CW\",\n    \"label\": \"Curaçao\"\n  },\n  {\n    \"value\": \"CY\",\n    \"label\": \"Cyprus\"\n  },\n  {\n    \"value\": \"CZ\",\n    \"label\": \"Czech Republic\"\n  },\n  {\n    \"value\": \"DK\",\n    \"label\": \"Denmark\"\n  },\n  {\n    \"value\": \"DJ\",\n    \"label\": \"Djibouti\"\n  },\n  {\n    \"value\": \"DM\",\n    \"label\": \"Dominica\"\n  },\n  {\n    \"value\": \"DO\",\n    \"label\": \"Dominican Republic\"\n  },\n  {\n    \"value\": \"EC\",\n    \"label\": \"Ecuador\"\n  },\n  {\n    \"value\": \"EG\",\n    \"label\": \"Egypt\"\n  },\n  {\n    \"value\": \"SV\",\n    \"label\": \"El Salvador\"\n  },\n  {\n    \"value\": \"GQ\",\n    \"label\": \"Equatorial Guinea\"\n  },\n  {\n    \"value\": \"ER\",\n    \"label\": \"Eritrea\"\n  },\n  {\n    \"value\": \"EE\",\n    \"label\": \"Estonia\"\n  },\n  {\n    \"value\": \"ET\",\n    \"label\": \"Ethiopia\"\n  },\n  {\n    \"value\": \"FK\",\n    \"label\": \"Falkland Islands (Malvinas)\"\n  },\n  {\n    \"value\": \"FO\",\n    \"label\": \"Faroe Islands\"\n  },\n  {\n    \"value\": \"FJ\",\n    \"label\": \"Fiji\"\n  },\n  {\n    \"value\": \"FI\",\n    \"label\": \"Finland\"\n  },\n  {\n    \"value\": \"FR\",\n    \"label\": \"France\"\n  },\n  {\n    \"value\": \"GF\",\n    \"label\": \"French Guiana\"\n  },\n  {\n    \"value\": \"PF\",\n    \"label\": \"French Polynesia\"\n  },\n  {\n    \"value\": \"TF\",\n    \"label\": \"French Southern Territories\"\n  },\n  {\n    \"value\": \"GA\",\n    \"label\": \"Gabon\"\n  },\n  {\n    \"value\": \"GM\",\n    \"label\": \"Gambia\"\n  },\n  {\n    \"value\": \"GE\",\n    \"label\": \"Georgia\"\n  },\n  {\n    \"value\": \"DE\",\n    \"label\": \"Germany\"\n  },\n  {\n    \"value\": \"GH\",\n    \"label\": \"Ghana\"\n  },\n  {\n    \"value\": \"GI\",\n    \"label\": \"Gibraltar\"\n  },\n  {\n    \"value\": \"GR\",\n    \"label\": \"Greece\"\n  },\n  {\n    \"value\": \"GL\",\n    \"label\": \"Greenland\"\n  },\n  {\n    \"value\": \"GD\",\n    \"label\": \"Grenada\"\n  },\n  {\n    \"value\": \"GP\",\n    \"label\": \"Guadeloupe\"\n  },\n  {\n    \"value\": \"GU\",\n    \"label\": \"Guam\"\n  },\n  {\n    \"value\": \"GT\",\n    \"label\": \"Guatemala\"\n  },\n  {\n    \"value\": \"GG\",\n    \"label\": \"Guernsey\"\n  },\n  {\n    \"value\": \"GN\",\n    \"label\": \"Guinea\"\n  },\n  {\n    \"value\": \"GW\",\n    \"label\": \"Guinea-Bissau\"\n  },\n  {\n    \"value\": \"GY\",\n    \"label\": \"Guyana\"\n  },\n  {\n    \"value\": \"HT\",\n    \"label\": \"Haiti\"\n  },\n  {\n    \"value\": \"HM\",\n    \"label\": \"Heard Island and McDonald Islands\"\n  },\n  {\n    \"value\": \"VA\",\n    \"label\": \"Holy See (Vatican City State)\"\n  },\n  {\n    \"value\": \"HN\",\n    \"label\": \"Honduras\"\n  },\n  {\n    \"value\": \"HK\",\n    \"label\": \"Hong Kong\"\n  },\n  {\n    \"value\": \"HU\",\n    \"label\": \"Hungary\"\n  },\n  {\n    \"value\": \"IS\",\n    \"label\": \"Iceland\"\n  },\n  {\n    \"value\": \"IN\",\n    \"label\": \"India\"\n  },\n  {\n    \"value\": \"ID\",\n    \"label\": \"Indonesia\"\n  },\n  {\n    \"value\": \"IR\",\n    \"label\": \"Iran, Islamic Republic of\"\n  },\n  {\n    \"value\": \"IQ\",\n    \"label\": \"Iraq\"\n  },\n  {\n    \"value\": \"IE\",\n    \"label\": \"Ireland\"\n  },\n  {\n    \"value\": \"IM\",\n    \"label\": \"Isle of Man\"\n  },\n  {\n    \"value\": \"IL\",\n    \"label\": \"Israel\"\n  },\n  {\n    \"value\": \"IT\",\n    \"label\": \"Italy\"\n  },\n  {\n    \"value\": \"JM\",\n    \"label\": \"Jamaica\"\n  },\n  {\n    \"value\": \"JP\",\n    \"label\": \"Japan\"\n  },\n  {\n    \"value\": \"JE\",\n    \"label\": \"Jersey\"\n  },\n  {\n    \"value\": \"JO\",\n    \"label\": \"Jordan\"\n  },\n  {\n    \"value\": \"KZ\",\n    \"label\": \"Kazakhstan\"\n  },\n  {\n    \"value\": \"KE\",\n    \"label\": \"Kenya\"\n  },\n  {\n    \"value\": \"KI\",\n    \"label\": \"Kiribati\"\n  },\n  {\n    \"value\": \"KP\",\n    \"label\": \"Korea, Democratic People's Republic of\"\n  },\n  {\n    \"value\": \"KR\",\n    \"label\": \"Korea, Republic of\"\n  },\n  {\n    \"value\": \"KW\",\n    \"label\": \"Kuwait\"\n  },\n  {\n    \"value\": \"KG\",\n    \"label\": \"Kyrgyzstan\"\n  },\n  {\n    \"value\": \"LA\",\n    \"label\": \"Lao People's Democratic Republic\"\n  },\n  {\n    \"value\": \"LV\",\n    \"label\": \"Latvia\"\n  },\n  {\n    \"value\": \"LB\",\n    \"label\": \"Lebanon\"\n  },\n  {\n    \"value\": \"LS\",\n    \"label\": \"Lesotho\"\n  },\n  {\n    \"value\": \"LR\",\n    \"label\": \"Liberia\"\n  },\n  {\n    \"value\": \"LY\",\n    \"label\": \"Libya\"\n  },\n  {\n    \"value\": \"LI\",\n    \"label\": \"Liechtenstein\"\n  },\n  {\n    \"value\": \"LT\",\n    \"label\": \"Lithuania\"\n  },\n  {\n    \"value\": \"LU\",\n    \"label\": \"Luxembourg\"\n  },\n  {\n    \"value\": \"MO\",\n    \"label\": \"Macao\"\n  },\n  {\n    \"value\": \"MK\",\n    \"label\": \"Macedonia, the Former Yugoslav Republic of\"\n  },\n  {\n    \"value\": \"MG\",\n    \"label\": \"Madagascar\"\n  },\n  {\n    \"value\": \"MW\",\n    \"label\": \"Malawi\"\n  },\n  {\n    \"value\": \"MY\",\n    \"label\": \"Malaysia\"\n  },\n  {\n    \"value\": \"MV\",\n    \"label\": \"Maldives\"\n  },\n  {\n    \"value\": \"ML\",\n    \"label\": \"Mali\"\n  },\n  {\n    \"value\": \"MT\",\n    \"label\": \"Malta\"\n  },\n  {\n    \"value\": \"MH\",\n    \"label\": \"Marshall Islands\"\n  },\n  {\n    \"value\": \"MQ\",\n    \"label\": \"Martinique\"\n  },\n  {\n    \"value\": \"MR\",\n    \"label\": \"Mauritania\"\n  },\n  {\n    \"value\": \"MU\",\n    \"label\": \"Mauritius\"\n  },\n  {\n    \"value\": \"YT\",\n    \"label\": \"Mayotte\"\n  },\n  {\n    \"value\": \"MX\",\n    \"label\": \"Mexico\"\n  },\n  {\n    \"value\": \"FM\",\n    \"label\": \"Micronesia, Federated States of\"\n  },\n  {\n    \"value\": \"MD\",\n    \"label\": \"Moldova, Republic of\"\n  },\n  {\n    \"value\": \"MC\",\n    \"label\": \"Monaco\"\n  },\n  {\n    \"value\": \"MN\",\n    \"label\": \"Mongolia\"\n  },\n  {\n    \"value\": \"ME\",\n    \"label\": \"Montenegro\"\n  },\n  {\n    \"value\": \"MS\",\n    \"label\": \"Montserrat\"\n  },\n  {\n    \"value\": \"MA\",\n    \"label\": \"Morocco\"\n  },\n  {\n    \"value\": \"MZ\",\n    \"label\": \"Mozambique\"\n  },\n  {\n    \"value\": \"MM\",\n    \"label\": \"Myanmar\"\n  },\n  {\n    \"value\": \"NA\",\n    \"label\": \"Namibia\"\n  },\n  {\n    \"value\": \"NR\",\n    \"label\": \"Nauru\"\n  },\n  {\n    \"value\": \"NP\",\n    \"label\": \"Nepal\"\n  },\n  {\n    \"value\": \"NL\",\n    \"label\": \"Netherlands\"\n  },\n  {\n    \"value\": \"NC\",\n    \"label\": \"New Caledonia\"\n  },\n  {\n    \"value\": \"NZ\",\n    \"label\": \"New Zealand\"\n  },\n  {\n    \"value\": \"NI\",\n    \"label\": \"Nicaragua\"\n  },\n  {\n    \"value\": \"NE\",\n    \"label\": \"Niger\"\n  },\n  {\n    \"value\": \"NG\",\n    \"label\": \"Nigeria\"\n  },\n  {\n    \"value\": \"NU\",\n    \"label\": \"Niue\"\n  },\n  {\n    \"value\": \"NF\",\n    \"label\": \"Norfolk Island\"\n  },\n  {\n    \"value\": \"MP\",\n    \"label\": \"Northern Mariana Islands\"\n  },\n  {\n    \"value\": \"NO\",\n    \"label\": \"Norway\"\n  },\n  {\n    \"value\": \"OM\",\n    \"label\": \"Oman\"\n  },\n  {\n    \"value\": \"PK\",\n    \"label\": \"Pakistan\"\n  },\n  {\n    \"value\": \"PW\",\n    \"label\": \"Palau\"\n  },\n  {\n    \"value\": \"PS\",\n    \"label\": \"Palestine, State of\"\n  },\n  {\n    \"value\": \"PA\",\n    \"label\": \"Panama\"\n  },\n  {\n    \"value\": \"PG\",\n    \"label\": \"Papua New Guinea\"\n  },\n  {\n    \"value\": \"PY\",\n    \"label\": \"Paraguay\"\n  },\n  {\n    \"value\": \"PE\",\n    \"label\": \"Peru\"\n  },\n  {\n    \"value\": \"PH\",\n    \"label\": \"Philippines\"\n  },\n  {\n    \"value\": \"PN\",\n    \"label\": \"Pitcairn\"\n  },\n  {\n    \"value\": \"PL\",\n    \"label\": \"Poland\"\n  },\n  {\n    \"value\": \"PT\",\n    \"label\": \"Portugal\"\n  },\n  {\n    \"value\": \"PR\",\n    \"label\": \"Puerto Rico\"\n  },\n  {\n    \"value\": \"QA\",\n    \"label\": \"Qatar\"\n  },\n  {\n    \"value\": \"RE\",\n    \"label\": \"Réunion\"\n  },\n  {\n    \"value\": \"RO\",\n    \"label\": \"Romania\"\n  },\n  {\n    \"value\": \"RU\",\n    \"label\": \"Russian Federation\"\n  },\n  {\n    \"value\": \"RW\",\n    \"label\": \"Rwanda\"\n  },\n  {\n    \"value\": \"BL\",\n    \"label\": \"Saint Barthélemy\"\n  },\n  {\n    \"value\": \"SH\",\n    \"label\": \"Saint Helena, Ascension and Tristan da Cunha\"\n  },\n  {\n    \"value\": \"KN\",\n    \"label\": \"Saint Kitts and Nevis\"\n  },\n  {\n    \"value\": \"LC\",\n    \"label\": \"Saint Lucia\"\n  },\n  {\n    \"value\": \"MF\",\n    \"label\": \"Saint Martin (French part)\"\n  },\n  {\n    \"value\": \"PM\",\n    \"label\": \"Saint Pierre and Miquelon\"\n  },\n  {\n    \"value\": \"VC\",\n    \"label\": \"Saint Vincent and the Grenadines\"\n  },\n  {\n    \"value\": \"WS\",\n    \"label\": \"Samoa\"\n  },\n  {\n    \"value\": \"SM\",\n    \"label\": \"San Marino\"\n  },\n  {\n    \"value\": \"ST\",\n    \"label\": \"Sao Tome and Principe\"\n  },\n  {\n    \"value\": \"SA\",\n    \"label\": \"Saudi Arabia\"\n  },\n  {\n    \"value\": \"SN\",\n    \"label\": \"Senegal\"\n  },\n  {\n    \"value\": \"RS\",\n    \"label\": \"Serbia\"\n  },\n  {\n    \"value\": \"SC\",\n    \"label\": \"Seychelles\"\n  },\n  {\n    \"value\": \"SL\",\n    \"label\": \"Sierra Leone\"\n  },\n  {\n    \"value\": \"SG\",\n    \"label\": \"Singapore\"\n  },\n  {\n    \"value\": \"SX\",\n    \"label\": \"Sint Maarten (Dutch part)\"\n  },\n  {\n    \"value\": \"SK\",\n    \"label\": \"Slovakia\"\n  },\n  {\n    \"value\": \"SI\",\n    \"label\": \"Slovenia\"\n  },\n  {\n    \"value\": \"SB\",\n    \"label\": \"Solomon Islands\"\n  },\n  {\n    \"value\": \"SO\",\n    \"label\": \"Somalia\"\n  },\n  {\n    \"value\": \"ZA\",\n    \"label\": \"South Africa\"\n  },\n  {\n    \"value\": \"GS\",\n    \"label\": \"South Georgia and the South Sandwich Islands\"\n  },\n  {\n    \"value\": \"SS\",\n    \"label\": \"South Sudan\"\n  },\n  {\n    \"value\": \"ES\",\n    \"label\": \"Spain\"\n  },\n  {\n    \"value\": \"LK\",\n    \"label\": \"Sri Lanka\"\n  },\n  {\n    \"value\": \"SD\",\n    \"label\": \"Sudan\"\n  },\n  {\n    \"value\": \"SR\",\n    \"label\": \"Suriname\"\n  },\n  {\n    \"value\": \"SJ\",\n    \"label\": \"Svalbard and Jan Mayen\"\n  },\n  {\n    \"value\": \"SZ\",\n    \"label\": \"Swaziland\"\n  },\n  {\n    \"value\": \"SE\",\n    \"label\": \"Sweden\"\n  },\n  {\n    \"value\": \"CH\",\n    \"label\": \"Switzerland\"\n  },\n  {\n    \"value\": \"SY\",\n    \"label\": \"Syrian Arab Republic\"\n  },\n  {\n    \"value\": \"TW\",\n    \"label\": \"Taiwan, Province of China\"\n  },\n  {\n    \"value\": \"TJ\",\n    \"label\": \"Tajikistan\"\n  },\n  {\n    \"value\": \"TZ\",\n    \"label\": \"Tanzania, United Republic of\"\n  },\n  {\n    \"value\": \"TH\",\n    \"label\": \"Thailand\"\n  },\n  {\n    \"value\": \"TL\",\n    \"label\": \"Timor-Leste\"\n  },\n  {\n    \"value\": \"TG\",\n    \"label\": \"Togo\"\n  },\n  {\n    \"value\": \"TK\",\n    \"label\": \"Tokelau\"\n  },\n  {\n    \"value\": \"TO\",\n    \"label\": \"Tonga\"\n  },\n  {\n    \"value\": \"TT\",\n    \"label\": \"Trinidad and Tobago\"\n  },\n  {\n    \"value\": \"TN\",\n    \"label\": \"Tunisia\"\n  },\n  {\n    \"value\": \"TR\",\n    \"label\": \"Turkey\"\n  },\n  {\n    \"value\": \"TM\",\n    \"label\": \"Turkmenistan\"\n  },\n  {\n    \"value\": \"TC\",\n    \"label\": \"Turks and Caicos Islands\"\n  },\n  {\n    \"value\": \"TV\",\n    \"label\": \"Tuvalu\"\n  },\n  {\n    \"value\": \"UG\",\n    \"label\": \"Uganda\"\n  },\n  {\n    \"value\": \"UA\",\n    \"label\": \"Ukraine\"\n  },\n  {\n    \"value\": \"AE\",\n    \"label\": \"United Arab Emirates\"\n  },\n  {\n    \"value\": \"GB\",\n    \"label\": \"United Kingdom\"\n  },\n  {\n    \"value\": \"US\",\n    \"label\": \"United States\"\n  },\n  {\n    \"value\": \"UM\",\n    \"label\": \"United States Minor Outlying Islands\"\n  },\n  {\n    \"value\": \"UY\",\n    \"label\": \"Uruguay\"\n  },\n  {\n    \"value\": \"UZ\",\n    \"label\": \"Uzbekistan\"\n  },\n  {\n    \"value\": \"VU\",\n    \"label\": \"Vanuatu\"\n  },\n  {\n    \"value\": \"VE\",\n    \"label\": \"Venezuela, Bolivarian Republic of\"\n  },\n  {\n    \"value\": \"VN\",\n    \"label\": \"Viet Nam\"\n  },\n  {\n    \"value\": \"VG\",\n    \"label\": \"Virgin Islands, British\"\n  },\n  {\n    \"value\": \"VI\",\n    \"label\": \"Virgin Islands, U.S.\"\n  },\n  {\n    \"value\": \"WF\",\n    \"label\": \"Wallis and Futuna\"\n  },\n  {\n    \"value\": \"EH\",\n    \"label\": \"Western Sahara\"\n  },\n  {\n    \"value\": \"YE\",\n    \"label\": \"Yemen\"\n  },\n  {\n    \"value\": \"ZM\",\n    \"label\": \"Zambia\"\n  },\n  {\n    \"value\": \"ZW\",\n    \"label\": \"Zimbabwe\"\n  }\n]\n\nexport default COUNTRIES\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport LineCharts from '../../components/LineChart'\nimport BarCharts from '../../components/BarCharts'\nimport { setCountry } from \"../../state/actions/countryActions\"\nimport { COUNTRIES } from '../../utils/countryList'\nimport { API_DIRECTORY } from '../../utils/constants'\nimport './App.css'\n\nconst mapStateToProps = state => {\n  return {\n    country: state.country\n  }\n}\n\nconst actionCreators = {\n  setCountry\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      datadownloading: false,\n    }\n  }\n\n  componentDidUpdate(prevProps){\n    const { country } = this.props\n    if(country !== prevProps.country){\n      this.getCountryData()\n    }\n  }\n\n  getCountryData = async () => {\n    const { country } = this.props\n    this.setState({ datadownloading: true })\n\n    const res = await\n    fetch(API_DIRECTORY + `?countryTimeline=` + country.value)\n    // API JSON objesi döndürmek yerine uyarı olursa gömülü şekilde html etiketlerini de döndürüyor. O nedenle text'i önce temizleyip sonra JSON'a parse etmeyi tercih ettim.\n    let resCountryDataText = await res.text()\n    resCountryDataText = resCountryDataText.split('<br />')\n    const resCountryDataJSON = JSON.parse(resCountryDataText[resCountryDataText.length - 1])\n    this.setState({ datadownloading: false })\n    if(null != resCountryDataJSON.timelineitems && resCountryDataJSON.timelineitems[0].stat === \"ok\"){\n      this.setState({ countryData: resCountryDataJSON.timelineitems[0] })\n    }\n    else{\n      this.setState({ countryData: \"\" })\n    }\n  }\n\n  handleChangeCountry = () => {\n    let countrySelect = document.getElementById(\"country-select\")\n    let selectedCountry = countrySelect.options[countrySelect.selectedIndex]\n    const currentCountry = { value: selectedCountry.value, label: selectedCountry.text }\n    this.props.setCountry(currentCountry)\n  }\n\n  render() {\n    const { datadownloading, countryData } = this.state\n    const chartsArea = datadownloading\n    ?\n    <div className=\"charts-container charts-container-download\">\n      <div className=\"charts-container-download-text\">\n        Loading...\n      </div>\n    </div>\n    :\n    (\n    countryData === \"\"\n    ?\n    <div className=\"charts-container\">\n      <div className=\"charts-container-text\">\n        The country you choose have no data available.\n      </div>\n    </div>\n    :\n\n      <div className=\"charts-container\">\n        <LineCharts\n          mode = 'DAILY_CASE'\n          countryData = {this.state.countryData}\n        />\n        <LineCharts\n          mode = 'MORTALITY_RATE_PERCENTAGE'\n          countryData = {this.state.countryData}\n        />\n        <BarCharts\n          mode = 'DAILY_DEATH_CHANGE'\n          countryData = {this.state.countryData}\n        />\n      </div>\n    )\n    return (\n      <div className=\"app-container\">\n        <h1>COVID-19 Country Data Visualization</h1>\n        <select id=\"country-select\" defaultValue=\"\" onChange={this.handleChangeCountry}>\n          <option value=\"\" hidden>Choose a country</option>\n          {\n            null != COUNTRIES && COUNTRIES.map((Country)=>{\n              return <option key={Country.value} value={Country.value}>{Country.label}</option>\n            })\n          }\n        </select>\n        {chartsArea}\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(App)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { setCountry } from \"../../state/actions/countryActions\"\nimport LineCharts from '../../components/LineChart'\nimport './Country.css'\n\nconst mapStateToProps = state => {\n  return {\n    country: state.country\n  }\n}\n\nconst actionCreators = {\n  setCountry\n}\n\nclass Country extends Component {\n  constructor(props){\n     super(props)\n     this.state = {}\n  }\n\n  componentDidMount(){\n    const currentCountry = { value: this.props.match.params.countryvalue }\n    console.log(\"currentCountry\",currentCountry)\n    this.props.setCountry(currentCountry)\n    this.getCountryData()\n  }\n\n  getCountryData = async () => {\n    //TODO Her zaman json dönmyor\n    const { country } = this.props\n    console.log(\"country\",country)\n    const res = await\n    // fetch(`https://api.covid19tracking.narrativa.com/api/2020-03-22/country/Turkey`)\n    fetch(`https://api.thevirustracker.com/free-api?countryTimeline=` + country.value)\n    let resCountryDataText = await res.text()\n    resCountryDataText = resCountryDataText.split('<br />')\n    console.log(\"resCountryDataText\",resCountryDataText)\n    const resCountryDataJSON = JSON.parse(resCountryDataText)\n    if(null != resCountryDataJSON.timelineitems && resCountryDataJSON.timelineitems[0].stat === \"ok\"){\n      this.setState({\n        countryData: resCountryDataJSON.timelineitems[0]\n      })\n    }\n    // const resCountryData = await res.json()\n    // console.log(\"resCountryData\",resCountryData)\n    // if(null != resCountryData.timelineitems && resCountryData.timelineitems[0].stat === \"ok\"){\n    //   this.setState({\n    //     countryData: resCountryData.timelineitems[0]\n    //   })\n    // }\n  }\n\n  render() {\n    return (\n      <div className=\"country-container\">\n        <span>{this.props.country.label}</span>\n        {\n          null != this.state.countryData &&\n          <LineCharts\n            countryData = {this.state.countryData}\n          />\n        }\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, actionCreators)(Country)\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\"\n\nimport App from './HomePage/App'\nimport Country from './CountryPage/Country'\n\nclass Routes extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<BrowserRouter>\n      <Switch>\n\t\t\t\t<Route exact path='/covid' component={App} />\n        <Route path='/country/:countryvalue' component={Country} />\n      </Switch>\n\t\t\t</BrowserRouter>\n\t\t)\n\t}\n}\n\nexport default Routes\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport reducer from './state/reducers'\nimport './index.css'\nimport Routes from './pages/Routes'\nimport * as serviceWorker from './serviceWorker'\n\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}